Okay Replit Agent, I've just finished setting up my Zoho Mail credentials as environment variables in my Replit project. Now I need to implement the functionality for user registration with email verification. I'm using *Node.js*.

Can you help me with the following steps to build this feature?

*Phase 1: Generating the Verification Code*

* "First, can you provide a function in *JavaScript* that generates a secure, random 6-digit alphanumeric verification code?"

*Phase 2: Database Interaction (Assuming you want to use a simple database)*

* "Next, I need to store this code along with the user's email and a 'pending' verification status in a database. For simplicity, can you show me how to connect to an SQLite database using a Node.js library like sqlite3 and create a table named user_verifications with columns for email (TEXT, UNIQUE), verification_code (TEXT), and is_verified (BOOLEAN, default 0)?"

*Phase 3: Storing the Code and User Information*

* "Now, write a function in *JavaScript* that takes a user's email and the generated verification code as input and inserts a new record into the user_verifications table."

*Phase 4: Constructing the Verification Email*

* "Show me how to create the body of an email message in *JavaScript* that includes a clear message for the user to verify their account. Include a placeholder where the verification code can be inserted into the email body."

*Phase 5: Sending the Email via SMTP (Zoho Mail with Nodemailer)*

* "Provide the code using the nodemailer library in Node.js to send this email using SMTP with my Zoho Mail account. Please use the environment variables I've already set up for the sender email (EMAIL_FROM), password (EMAIL_PASSWORD), host (EMAIL_HOST), and port (EMAIL_PORT). The recipient will be the user's email address, and the subject should be something like 'Verify Your Account'."

*Phase 6: Verifying the Code*

* "Finally, I need a function in *JavaScript* that takes a user's email and a verification code as input. This function should query the user_verifications table to see if there's a matching record with the given email and code, and if the is_verified status is still 0. If a match is found, update the is_verified status