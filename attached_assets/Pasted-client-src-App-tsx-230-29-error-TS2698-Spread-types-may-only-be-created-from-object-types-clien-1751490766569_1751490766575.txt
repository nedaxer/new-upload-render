client/src/App.tsx(230,29): error TS2698: Spread types may only be created from object types.
client/src/App.tsx(284,30): error TS2698: Spread types may only be created from object types.
client/src/App.tsx(291,33): error TS2698: Spread types may only be created from object types.
client/src/components/crypto-pair-selector.tsx(78,25): error TS2652: Merged declaration 'CryptoPairSelector' cannot include a default export declaration. Consider adding a separate 'export default CryptoPairSelector' declaration instead.
client/src/components/crypto-pair-selector.tsx(196,27): error TS2554: Expected 2 arguments, but got 1.
client/src/components/crypto-pair-selector.tsx(268,29): error TS2554: Expected 2 arguments, but got 1.
client/src/components/crypto-pair-selector.tsx(327,14): error TS2652: Merged declaration 'CryptoPairSelector' cannot include a default export declaration. Consider adding a separate 'export default CryptoPairSelector' declaration instead.
client/src/components/lightweight-chart.tsx(87,24): error TS2339: Property 'addCandlestickSeries' does not exist on type 'IChartApi'.
client/src/components/lightweight-chart.tsx(96,24): error TS2551: Property 'addLineSeries' does not exist on type 'IChartApi'. Did you mean 'addSeries'?
client/src/components/lightweight-chart.tsx(112,36): error TS2551: Property 'addHistogramSeries' does not exist on type 'IChartApi'. Did you mean 'addCustomSeries'?
client/src/components/protected-route.tsx(43,41): error TS2339: Property 'DEV' does not exist on type 'ImportMetaEnv'.
client/src/components/protected-route.tsx(75,17): error TS2741: Property 'params' is missing in type '{}' but required in type 'RouteComponentProps<{ [param: string]: string; }>'.
client/src/components/pull-to-refresh.tsx(13,25): error TS2307: Cannot find module '@assets/Refresh  app logo_1750782062607.png' or its corresponding type declarations.
client/src/components/pull-to-refresh.tsx(14,21): error TS2307: Cannot find module '@assets/20250618_001640_1750782086856.png' or its corresponding type declarations.
client/src/components/pull-to-refresh.tsx(15,22): error TS2307: Cannot find module '@assets/20250618_001710_1750782086866.png' or its corresponding type declarations.
client/src/components/pull-to-refresh.tsx(16,21): error TS2307: Cannot find module '@assets/20250618_001748_1750782086877.png' or its corresponding type declarations.
client/src/components/pull-to-refresh.tsx(17,21): error TS2307: Cannot find module '@assets/20250618_001828_1750782086889.png' or its corresponding type declarations.
client/src/components/pull-to-refresh.tsx(18,21): error TS2307: Cannot find module '@assets/20250618_001859_1750782086919.png' or its corresponding type declarations.
client/src/components/pull-to-refresh.tsx(19,22): error TS2307: Cannot find module '@assets/20250618_001938_1750782086928.png' or its corresponding type declarations.
client/src/components/pull-to-refresh.tsx(20,21): error TS2307: Cannot find module '@assets/20250618_002006_1750782086936.png' or its corresponding type declarations.
client/src/components/splash-screen.tsx(5,21): error TS2307: Cannot find module '@assets/20250618_001640_1750207793691.png' or its corresponding type declarations.
client/src/components/splash-screen.tsx(6,22): error TS2307: Cannot find module '@assets/20250618_001710_1750207793694.png' or its corresponding type declarations.
client/src/components/splash-screen.tsx(7,21): error TS2307: Cannot find module '@assets/20250618_001748_1750207793698.png' or its corresponding type declarations.
client/src/components/splash-screen.tsx(8,21): error TS2307: Cannot find module '@assets/20250618_001828_1750207793703.png' or its corresponding type declarations.
client/src/components/splash-screen.tsx(9,21): error TS2307: Cannot find module '@assets/20250618_001859_1750207793716.png' or its corresponding type declarations.
client/src/components/splash-screen.tsx(10,22): error TS2307: Cannot find module '@assets/20250618_001938_1750207793727.png' or its corresponding type declarations.
client/src/components/splash-screen.tsx(11,21): error TS2307: Cannot find module '@assets/20250618_002006_1750207793730.png' or its corresponding type declarations.
client/src/components/splash-screen.tsx(12,29): error TS2307: Cannot find module '@assets/file_00000000e0d461f9b4be5c8627966318_1750209747614.png' or its corresponding type declarations.
client/src/components/splash-screen.tsx(13,25): error TS2307: Cannot find module '@assets/20250618_042459_1750217238332.png' or its corresponding type declarations.
client/src/hooks/use-bottom-banner.ts(1,24): error TS2307: Cannot find module 'zustand' or its corresponding type declarations.
client/src/lib/chart-state-manager.ts(155,5): error TS2322: Type 'Window' is not assignable to type 'boolean'.
client/src/pages/company/careers.tsx(7,27): error TS2307: Cannot find module '/team_photos/team_main.png' or its corresponding type declarations.
client/src/pages/company/careers.tsx(8,24): error TS2307: Cannot find module '/team_photos/team_1.png' or its corresponding type declarations.
client/src/pages/company/careers.tsx(9,24): error TS2307: Cannot find module '/team_photos/team_2.png' or its corresponding type declarations.
client/src/pages/company/careers.tsx(10,24): error TS2307: Cannot find module '/team_photos/team_3.png' or its corresponding type declarations.
client/src/pages/company/careers.tsx(11,24): error TS2307: Cannot find module '/team_photos/team_4.png' or its corresponding type declarations.
client/src/pages/company/careers.tsx(12,24): error TS2307: Cannot find module '/team_photos/team_5.png' or its corresponding type declarations.
client/src/pages/company/careers.tsx(13,24): error TS2307: Cannot find module '/team_photos/team_6.png' or its corresponding type declarations.
client/src/pages/mobile/assets.tsx(34,33): error TS2307: Cannot find module '@/assets/advanced-charts-video.mp4' or its corresponding type declarations.
client/src/pages/mobile/deposit-details.tsx(42,11): error TS2339: Property 'transactionId' does not exist on type 'StringRouteParams<undefined>'.
client/src/pages/mobile/home.tsx(353,20): error TS2554: Expected 2-3 arguments, but got 1.
client/src/pages/mobile/home.tsx(524,24): error TS2339: Property 'data' does not exist on type 'unknown'.
client/src/pages/mobile/home.tsx(737,21): error TS2339: Property 'data' does not exist on type 'unknown'.
client/src/pages/mobile/home.tsx(737,61): error TS2339: Property 'data' does not exist on type 'unknown'.
client/src/pages/mobile/home.tsx(742,44): error TS2339: Property 'data' does not exist on type 'unknown'.
client/src/pages/mobile/home.tsx(743,35): error TS2339: Property 'data' does not exist on type 'unknown'.
client/src/pages/mobile/home.tsx(787,35): error TS2339: Property 'unreadCount' does not exist on type 'unknown'.
client/src/pages/mobile/home.tsx(790,40): error TS2339: Property 'unreadCount' does not exist on type 'unknown'.
client/src/pages/mobile/home.tsx(790,83): error TS2339: Property 'unreadCount' does not exist on type 'unknown'.
client/src/pages/mobile/kyc-status.tsx(37,30): error TS2339: Property 'data' does not exist on type 'unknown'.
client/src/pages/mobile/news.tsx(244,50): error TS2304: Cannot find name 'getSourceIcon'.
client/src/pages/mobile/security.tsx(69,20): error TS2554: Expected 2-3 arguments, but got 1.
client/src/pages/mobile/security.tsx(77,20): error TS2554: Expected 2-3 arguments, but got 1.
client/src/pages/mobile/security.tsx(266,23): error TS2339: Property 'data' does not exist on type 'Response'.
client/src/pages/mobile/security.tsx(269,25): error TS2339: Property 'data' does not exist on type 'Response'.
client/src/pages/mobile/security.tsx(665,30): error TS2339: Property 'data' does not exist on type 'Response'.
client/src/pages/mobile/settings.tsx(53,20): error TS2554: Expected 2-3 arguments, but got 1.
client/src/pages/mobile/settings.tsx(61,20): error TS2554: Expected 2-3 arguments, but got 1.
client/src/pages/mobile/settings.tsx(68,24): error TS2339: Property 'data' does not exist on type 'Response'.
client/src/pages/mobile/settings.tsx(69,35): error TS2339: Property 'data' does not exist on type 'Response'.
client/src/pages/mobile/settings.tsx(388,28): error TS2339: Property 'data' does not exist on type 'Response'.
client/src/pages/mobile/settings.tsx(390,32): error TS2339: Property 'data' does not exist on type 'Response'.
client/src/pages/mobile/settings.tsx(394,29): error TS2339: Property 'data' does not exist on type 'Response'.
client/src/pages/mobile/settings.tsx(396,32): error TS2339: Property 'data' does not exist on type 'Response'.
client/src/pages/mobile/trade.tsx(212,61): error TS2448: Block-scoped variable 'currentSymbol' used before its declaration.
client/src/pages/mobile/transfer-details.tsx(11,11): error TS2339: Property 'transactionId' does not exist on type 'StringRouteParams<undefined>'.
client/src/pages/mobile/verification-submitted.tsx(36,30): error TS2339: Property 'data' does not exist on type 'unknown'.
client/src/pages/mobile/verification/VerificationStart.tsx(7,31): error TS2307: Cannot find module '@assets/Picsart_25-06-28_15-49-20-738 (1)_1751125238732.png' or its corresponding type declarations.
client/src/pages/mobile/withdrawal-details.tsx(42,11): error TS2339: Property 'transactionId' does not exist on type 'StringRouteParams<undefined>'.
client/src/pages/mobile/withdrawal-details.tsx(52,44): error TS2339: Property 'data' does not exist on type 'unknown'.
client/src/pages/platform/staking.tsx(162,46): error TS2345: Argument of type '{ method: string; body: { currencyId: number; amount: number; lockupDays: number; }; }' is not assignable to parameter of type 'string'.
client/src/pages/platform/staking.tsx(180,62): error TS2345: Argument of type '{ method: string; }' is not assignable to parameter of type 'string'.
client/src/pages/platform/trading.tsx(51,33): error TS2339: Property 'find' does not exist on type 'unknown'.
client/src/pages/platform/wallet.tsx(161,48): error TS2345: Argument of type '{ method: string; body: { currencyId: number; amount: number; address: string; }; }' is not assignable to parameter of type 'string'.
server/api/admin-kyc-routes.ts(40,29): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(id: any, projection: ProjectionType<IUser>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(id: any, projection?: ProjectionType<...>, options?: QueryOp...' has signatures, but none of those signatures are compatible with each other.
server/api/admin-kyc-routes.ts(122,45): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(filter: RootFilterQuery<IUser>, projection: ProjectionType<...>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(filter: RootFilterQuery<...>, projectio...' has signatures, but none of those signatures are compatible with each other.
server/api/admin-kyc-routes.ts(152,29): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(filter: RootFilterQuery<IUser>, projection: ProjectionType<...>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(filter?: RootFilterQuery<...>, projecti...' has signatures, but none of those signatures are compatible with each other.
server/api/admin-panel-routes.ts(11,12): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/api/admin-panel-routes.ts(18,71): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/api/admin-panel-routes.ts(48,24): error TS2362: The left-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type.
server/api/admin-panel-routes.ts(137,8): error TS2339: Property 'where' does not exist on type 'Omit<PgSelectBase<"user_balances", { id: PgColumn<{ name: "id"; tableName: "user_balances"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; userId: PgColumn<...>; currencyId: PgColumn<...>; bal...'.
server/api/admin-panel-routes.ts(143,11): error TS2353: Object literal may only specify known properties, and 'balance' does not exist in type '{ userId?: number | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>; currencyId?: number | SQL<unknown> | PgColumn<...>; id?: number | ... 1 more ... | PgColumn<...>; }'.
server/api/admin-panel-routes.ts(149,37): error TS2769: No overload matches this call.
  Overload 1 of 2, '(value: { userId: number | SQL<unknown> | Placeholder<string, any>; currencyId: number | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<...>; }): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'balance' does not exist in type '{ userId: number | SQL<unknown> | Placeholder<string, any>; currencyId: number | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<...>; }'.
  Overload 2 of 2, '(values: { userId: number | SQL<unknown> | Placeholder<string, any>; currencyId: number | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<...>; }[]): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'userId' does not exist in type '{ userId: number | SQL<unknown> | Placeholder<string, any>; currencyId: number | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<...>; }[]'.
server/api/admin-panel-routes.ts(158,21): error TS2304: Cannot find name 'adminCredits'.
server/api/admin-panel-routes.ts(159,20): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/api/admin-panel-routes.ts(168,35): error TS2769: No overload matches this call.
  Overload 1 of 2, '(value: { userId: number | SQL<unknown> | Placeholder<string, any>; type: string | SQL<unknown> | Placeholder<string, any>; currencyId: number | SQL<unknown> | Placeholder<...>; amount: number | ... 1 more ... | Placeholder<...>; id?: number | ... 1 more ... | Placeholder<...>; }): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'sourceId' does not exist in type '{ userId: number | SQL<unknown> | Placeholder<string, any>; type: string | SQL<unknown> | Placeholder<string, any>; currencyId: number | SQL<unknown> | Placeholder<...>; amount: number | ... 1 more ... | Placeholder<...>; id?: number | ... 1 more ... | Placeholder<...>; }'.
  Overload 2 of 2, '(values: { userId: number | SQL<unknown> | Placeholder<string, any>; type: string | SQL<unknown> | Placeholder<string, any>; currencyId: number | SQL<unknown> | Placeholder<...>; amount: number | ... 1 more ... | Placeholder<...>; id?: number | ... 1 more ... | Placeholder<...>; }[]): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'userId' does not exist in type '{ userId: number | SQL<unknown> | Placeholder<string, any>; type: string | SQL<unknown> | Placeholder<string, any>; currencyId: number | SQL<unknown> | Placeholder<...>; amount: number | ... 1 more ... | Placeholder<...>; id?: number | ... 1 more ... | Placeholder<...>; }[]'.
server/api/admin-panel-routes.ts(237,11): error TS2353: Object literal may only specify known properties, and 'rate' does not exist in type '{ currencyId?: number | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>; apy?: number | SQL<unknown> | PgColumn<...>; id?: number | ... 1 more ... | PgColumn<...>; }'.
server/api/admin-panel-routes.ts(244,37): error TS2769: No overload matches this call.
  Overload 1 of 2, '(value: { currencyId: number | SQL<unknown> | Placeholder<string, any>; apy: number | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<...>; }): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'rate' does not exist in type '{ currencyId: number | SQL<unknown> | Placeholder<string, any>; apy: number | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<string, any>; }'.
  Overload 2 of 2, '(values: { currencyId: number | SQL<unknown> | Placeholder<string, any>; apy: number | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<...>; }[]): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'currencyId' does not exist in type '{ currencyId: number | SQL<unknown> | Placeholder<string, any>; apy: number | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<string, any>; }[]'.
server/api/admin-panel-routes.ts(274,34): error TS2339: Property 'sourceAmount' does not exist on type 'PgTableWithColumns<{ name: "transactions"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "transactions"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; ... 8 more ...; generated: undefined; }, {}, {}>; ... 10 more ...; updatedAt: PgColumn<...>; }; diale...'.
server/api/admin-panel-routes.ts(275,34): error TS2339: Property 'targetAmount' does not exist on type 'PgTableWithColumns<{ name: "transactions"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "transactions"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; ... 8 more ...; generated: undefined; }, {}, {}>; ... 10 more ...; updatedAt: PgColumn<...>; }; diale...'.
server/api/admin-routes.ts(14,12): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/api/admin-routes.ts(20,29): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(id: any, projection: ProjectionType<IUser>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(id: any, projection?: ProjectionType<...>, options?: QueryOp...' has signatures, but none of those signatures are compatible with each other.
server/api/admin-routes.ts(20,42): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/api/admin-routes.ts(92,33): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(filter: RootFilterQuery<IUser>, projection: ProjectionType<...>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(filter: RootFilterQuery<...>, projectio...' has signatures, but none of those signatures are compatible with each other.
server/api/admin-routes.ts(105,50): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = any>(filter: RootFilterQuery<any>, projection: ProjectionType<any>, options: QueryOptions<any> & { lean: true; }): Query<(FlattenMaps<...> & Required<...> & { ...; })[], ... 4 more ..., {}>; <ResultDoc = any>(filter: RootFilterQuery<...>, projection?: ProjectionType<...>, options?: QueryOptions<...>):...' has signatures, but none of those signatures are compatible with each other.
server/api/admin-routes.ts(114,39): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = any>(filter: RootFilterQuery<any>, projection: ProjectionType<any>, options: QueryOptions<any> & { lean: true; }): Query<(FlattenMaps<...> & Required<...> & { ...; })[], ... 4 more ..., {}>; <ResultDoc = any>(filter: RootFilterQuery<...>, projection?: ProjectionType<...>, options?: QueryOptions<...>):...' has signatures, but none of those signatures are compatible with each other.
server/api/admin-routes.ts(158,35): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(id: any, projection: ProjectionType<IUser>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(id: any, projection?: ProjectionType<...>, options?: QueryOp...' has signatures, but none of those signatures are compatible with each other.
server/api/admin-routes.ts(168,43): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = any>(id: any, projection: ProjectionType<any>, options: QueryOptions<any> & { lean: true; }): Query<(FlattenMaps<any> & Required<{ _id: unknown; }> & { ...; })[] | (FlattenMaps<...> & ... 1 more ... & { ...; }), ... 4 more ..., {}>; <ResultDoc = any>(id: any, projection?: ProjectionType<...>, options?...' has signatures, but none of those signatures are compatible with each other.
server/api/admin-routes.ts(178,47): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = any>(filter: RootFilterQuery<any>, projection: ProjectionType<any>, options: QueryOptions<any> & { lean: true; }): Query<(FlattenMaps<...> & ... 1 more ... & { ...; })[] | (FlattenMaps<...> & ... 1 more ... & { ...; }), ... 4 more ..., {}>; <ResultDoc = any>(filter?: RootFilterQuery<...>, projection?:...' has signatures, but none of those signatures are compatible with each other.
server/api/admin-routes.ts(190,25): error TS2349: This expression is not callable.
  Each member of the union type '{ <DocContents = AnyKeys<any>>(docs: any[], options: CreateOptions & { aggregateErrors: true; }): Promise<any[]>; <DocContents = AnyKeys<any>>(docs: any[], options?: CreateOptions): Promise<...>; <DocContents = AnyKeys<...>>(doc: any): Promise<...>; <DocContents = AnyKeys<...>>(...docs: any[]): Promise<...>; } | { ....' has signatures, but none of those signatures are compatible with each other.
server/api/admin-routes.ts(200,23): error TS2349: This expression is not callable.
  Each member of the union type '{ <DocContents = AnyKeys<any>>(docs: any[], options: CreateOptions & { aggregateErrors: true; }): Promise<any[]>; <DocContents = AnyKeys<any>>(docs: any[], options?: CreateOptions): Promise<...>; <DocContents = AnyKeys<...>>(doc: any): Promise<...>; <DocContents = AnyKeys<...>>(...docs: any[]): Promise<...>; } | { ....' has signatures, but none of those signatures are compatible with each other.
server/api/admin-routes.ts(251,44): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = any>(filter: RootFilterQuery<any>, projection: ProjectionType<any>, options: QueryOptions<any> & { lean: true; }): Query<(FlattenMaps<...> & ... 1 more ... & { ...; })[] | (FlattenMaps<...> & ... 1 more ... & { ...; }), ... 4 more ..., {}>; <ResultDoc = any>(filter?: RootFilterQuery<...>, projection?:...' has signatures, but none of those signatures are compatible with each other.
server/api/admin-routes.ts(267,25): error TS2349: This expression is not callable.
  Each member of the union type '{ <DocContents = AnyKeys<any>>(docs: any[], options: CreateOptions & { aggregateErrors: true; }): Promise<any[]>; <DocContents = AnyKeys<any>>(docs: any[], options?: CreateOptions): Promise<...>; <DocContents = AnyKeys<...>>(doc: any): Promise<...>; <DocContents = AnyKeys<...>>(...docs: any[]): Promise<...>; } | { ....' has signatures, but none of those signatures are compatible with each other.
server/api/admin-routes.ts(303,29): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(id: any, projection: ProjectionType<IUser>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(id: any, projection?: ProjectionType<...>, options?: QueryOp...' has signatures, but none of those signatures are compatible with each other.
server/api/futures-trading-routes.ts(17,12): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/api/futures-trading-routes.ts(30,11): error TS2304: Cannot find name 'futuresPositions'.
server/api/futures-trading-routes.ts(31,13): error TS2304: Cannot find name 'futuresPositions'.
server/api/futures-trading-routes.ts(32,13): error TS2304: Cannot find name 'futuresPositions'.
server/api/futures-trading-routes.ts(33,19): error TS2304: Cannot find name 'futuresPositions'.
server/api/futures-trading-routes.ts(34,18): error TS2304: Cannot find name 'futuresPositions'.
server/api/futures-trading-routes.ts(35,17): error TS2304: Cannot find name 'futuresPositions'.
server/api/futures-trading-routes.ts(36,15): error TS2304: Cannot find name 'futuresPositions'.
server/api/futures-trading-routes.ts(37,12): error TS2304: Cannot find name 'futuresPositions'.
server/api/futures-trading-routes.ts(38,22): error TS2304: Cannot find name 'futuresPositions'.
server/api/futures-trading-routes.ts(39,15): error TS2304: Cannot find name 'futuresPositions'.
server/api/futures-trading-routes.ts(40,17): error TS2304: Cannot find name 'futuresPositions'.
server/api/futures-trading-routes.ts(41,19): error TS2304: Cannot find name 'futuresPositions'.
server/api/futures-trading-routes.ts(42,18): error TS2304: Cannot find name 'futuresPositions'.
server/api/futures-trading-routes.ts(43,15): error TS2304: Cannot find name 'futuresContracts'.
server/api/futures-trading-routes.ts(44,18): error TS2304: Cannot find name 'futuresContracts'.
server/api/futures-trading-routes.ts(45,19): error TS2304: Cannot find name 'futuresContracts'.
server/api/futures-trading-routes.ts(47,11): error TS2304: Cannot find name 'futuresPositions'.
server/api/futures-trading-routes.ts(48,15): error TS2304: Cannot find name 'futuresContracts'.
server/api/futures-trading-routes.ts(48,36): error TS2304: Cannot find name 'futuresPositions'.
server/api/futures-trading-routes.ts(48,65): error TS2304: Cannot find name 'futuresContracts'.
server/api/futures-trading-routes.ts(50,10): error TS2304: Cannot find name 'futuresPositions'.
server/api/futures-trading-routes.ts(50,39): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/api/futures-trading-routes.ts(51,10): error TS2304: Cannot find name 'futuresPositions'.
server/api/futures-trading-routes.ts(53,19): error TS2304: Cannot find name 'futuresPositions'.
server/api/futures-trading-routes.ts(74,27): error TS2339: Property 'type' does not exist on type 'PgTableWithColumns<{ name: "futures_orders"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "futures_orders"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; ... 8 more ...; generated: undefined; }, {}, {}>; ... 11 more ...; updatedAt: PgColumn<...>; }; d...'.
server/api/futures-trading-routes.ts(75,31): error TS2339: Property 'quantity' does not exist on type 'PgTableWithColumns<{ name: "futures_orders"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "futures_orders"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; ... 8 more ...; generated: undefined; }, {}, {}>; ... 11 more ...; updatedAt: PgColumn<...>; }; d...'.
server/api/futures-trading-routes.ts(76,28): error TS2339: Property 'price' does not exist on type 'PgTableWithColumns<{ name: "futures_orders"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "futures_orders"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; ... 8 more ...; generated: undefined; }, {}, {}>; ... 11 more ...; updatedAt: PgColumn<...>; }; d...'.
server/api/futures-trading-routes.ts(77,32): error TS2339: Property 'stopPrice' does not exist on type 'PgTableWithColumns<{ name: "futures_orders"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "futures_orders"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; ... 8 more ...; generated: undefined; }, {}, {}>; ... 11 more ...; updatedAt: PgColumn<...>; }; d...'.
server/api/futures-trading-routes.ts(78,34): error TS2339: Property 'executedQty' does not exist on type 'PgTableWithColumns<{ name: "futures_orders"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "futures_orders"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; ... 8 more ...; generated: undefined; }, {}, {}>; ... 11 more ...; updatedAt: PgColumn<...>; }; d...'.
server/api/futures-trading-routes.ts(81,34): error TS2339: Property 'timeInForce' does not exist on type 'PgTableWithColumns<{ name: "futures_orders"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "futures_orders"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; ... 8 more ...; generated: undefined; }, {}, {}>; ... 11 more ...; updatedAt: PgColumn<...>; }; d...'.
server/api/futures-trading-routes.ts(82,33): error TS2339: Property 'reduceOnly' does not exist on type 'PgTableWithColumns<{ name: "futures_orders"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "futures_orders"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; ... 8 more ...; generated: undefined; }, {}, {}>; ... 11 more ...; updatedAt: PgColumn<...>; }; d...'.
server/api/futures-trading-routes.ts(84,15): error TS2304: Cannot find name 'futuresContracts'.
server/api/futures-trading-routes.ts(85,18): error TS2304: Cannot find name 'futuresContracts'.
server/api/futures-trading-routes.ts(86,19): error TS2304: Cannot find name 'futuresContracts'.
server/api/futures-trading-routes.ts(89,15): error TS2304: Cannot find name 'futuresContracts'.
server/api/futures-trading-routes.ts(89,50): error TS2339: Property 'contractId' does not exist on type 'PgTableWithColumns<{ name: "futures_orders"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "futures_orders"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; ... 8 more ...; generated: undefined; }, {}, {}>; ... 11 more ...; updatedAt: PgColumn<...>; }; d...'.
server/api/futures-trading-routes.ts(89,62): error TS2304: Cannot find name 'futuresContracts'.
server/api/futures-trading-routes.ts(90,41): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/api/futures-trading-routes.ts(134,13): error TS2304: Cannot find name 'futuresContracts'.
server/api/futures-trading-routes.ts(136,12): error TS2304: Cannot find name 'futuresContracts'.
server/api/futures-trading-routes.ts(137,12): error TS2304: Cannot find name 'futuresContracts'.
server/api/futures-trading-routes.ts(155,37): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/api/futures-trading-routes.ts(172,45): error TS2304: Cannot find name 'futuresPositions'.
server/api/futures-trading-routes.ts(173,21): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/api/futures-trading-routes.ts(191,11): error TS2353: Object literal may only specify known properties, and 'balance' does not exist in type '{ userId?: number | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>; currencyId?: number | SQL<unknown> | PgColumn<...>; id?: number | ... 1 more ... | PgColumn<...>; }'.
server/api/futures-trading-routes.ts(197,37): error TS2769: No overload matches this call.
  Overload 1 of 2, '(value: { userId: number | SQL<unknown> | Placeholder<string, any>; type: string | SQL<unknown> | Placeholder<string, any>; currencyId: number | SQL<unknown> | Placeholder<...>; amount: number | ... 1 more ... | Placeholder<...>; id?: number | ... 1 more ... | Placeholder<...>; }): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'sourceId' does not exist in type '{ userId: number | SQL<unknown> | Placeholder<string, any>; type: string | SQL<unknown> | Placeholder<string, any>; currencyId: number | SQL<unknown> | Placeholder<...>; amount: number | ... 1 more ... | Placeholder<...>; id?: number | ... 1 more ... | Placeholder<...>; }'.
  Overload 2 of 2, '(values: { userId: number | SQL<unknown> | Placeholder<string, any>; type: string | SQL<unknown> | Placeholder<string, any>; currencyId: number | SQL<unknown> | Placeholder<...>; amount: number | ... 1 more ... | Placeholder<...>; id?: number | ... 1 more ... | Placeholder<...>; }[]): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'userId' does not exist in type '{ userId: number | SQL<unknown> | Placeholder<string, any>; type: string | SQL<unknown> | Placeholder<string, any>; currencyId: number | SQL<unknown> | Placeholder<...>; amount: number | ... 1 more ... | Placeholder<...>; id?: number | ... 1 more ... | Placeholder<...>; }[]'.
server/api/futures-trading-routes.ts(198,21): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/api/futures-trading-routes.ts(223,57): error TS2769: No overload matches this call.
  Overload 1 of 2, '(value: { symbol: string | SQL<unknown> | Placeholder<string, any>; userId: number | SQL<unknown> | Placeholder<string, any>; side: string | SQL<unknown> | Placeholder<...>; ... 4 more ...; id?: number | ... 1 more ... | Placeholder<...>; }): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'contractId' does not exist in type '{ symbol: string | SQL<unknown> | Placeholder<string, any>; userId: number | SQL<unknown> | Placeholder<string, any>; side: string | SQL<unknown> | Placeholder<string, any>; ... 4 more ...; id?: number | ... 1 more ... | Placeholder<...>; }'.
  Overload 2 of 2, '(values: { symbol: string | SQL<unknown> | Placeholder<string, any>; userId: number | SQL<unknown> | Placeholder<string, any>; side: string | SQL<unknown> | Placeholder<...>; ... 4 more ...; id?: number | ... 1 more ... | Placeholder<...>; }[]): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'userId' does not exist in type '{ symbol: string | SQL<unknown> | Placeholder<string, any>; userId: number | SQL<unknown> | Placeholder<string, any>; side: string | SQL<unknown> | Placeholder<string, any>; ... 4 more ...; id?: number | ... 1 more ... | Placeholder<...>; }[]'.
server/api/futures-trading-routes.ts(224,21): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/api/futures-trading-routes.ts(278,13): error TS2304: Cannot find name 'futuresPositions'.
server/api/futures-trading-routes.ts(280,12): error TS2304: Cannot find name 'futuresPositions'.
server/api/futures-trading-routes.ts(281,12): error TS2304: Cannot find name 'futuresPositions'.
server/api/futures-trading-routes.ts(281,41): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/api/futures-trading-routes.ts(282,12): error TS2304: Cannot find name 'futuresPositions'.
server/api/futures-trading-routes.ts(298,21): error TS2304: Cannot find name 'futuresPositions'.
server/api/futures-trading-routes.ts(304,17): error TS2304: Cannot find name 'futuresPositions'.
server/api/futures-trading-routes.ts(314,37): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/api/futures-trading-routes.ts(321,11): error TS2353: Object literal may only specify known properties, and 'balance' does not exist in type '{ userId?: number | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>; currencyId?: number | SQL<unknown> | PgColumn<...>; id?: number | ... 1 more ... | PgColumn<...>; }'.
server/api/futures-trading-routes.ts(351,38): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/api/futures-trading-routes.ts(367,9): error TS2353: Object literal may only specify known properties, and 'status' does not exist in type '{ symbol?: string | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>; userId?: number | SQL<unknown> | PgColumn<ColumnBaseConfig<...>, {}, {}>; ... 5 more ...; id?: number | ... 1 more ... | PgColumn<...>; }'.
server/api/futures-trading-routes.ts(390,11): error TS2304: Cannot find name 'futuresPositions'.
server/api/futures-trading-routes.ts(391,13): error TS2304: Cannot find name 'futuresPositions'.
server/api/futures-trading-routes.ts(392,13): error TS2304: Cannot find name 'futuresPositions'.
server/api/futures-trading-routes.ts(393,19): error TS2304: Cannot find name 'futuresPositions'.
server/api/futures-trading-routes.ts(394,17): error TS2304: Cannot find name 'futuresPositions'.
server/api/futures-trading-routes.ts(395,12): error TS2304: Cannot find name 'futuresPositions'.
server/api/futures-trading-routes.ts(396,15): error TS2304: Cannot find name 'futuresPositions'.
server/api/futures-trading-routes.ts(397,18): error TS2304: Cannot find name 'futuresPositions'.
server/api/futures-trading-routes.ts(398,15): error TS2304: Cannot find name 'futuresContracts'.
server/api/futures-trading-routes.ts(400,11): error TS2304: Cannot find name 'futuresPositions'.
server/api/futures-trading-routes.ts(401,15): error TS2304: Cannot find name 'futuresContracts'.
server/api/futures-trading-routes.ts(401,36): error TS2304: Cannot find name 'futuresPositions'.
server/api/futures-trading-routes.ts(401,65): error TS2304: Cannot find name 'futuresContracts'.
server/api/futures-trading-routes.ts(402,15): error TS2304: Cannot find name 'futuresPositions'.
server/api/futures-trading-routes.ts(402,44): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/api/futures-trading-routes.ts(403,19): error TS2304: Cannot find name 'futuresPositions'.
server/api/market-data-routes.ts(232,46): error TS2304: Cannot find name 'futuresContracts'.
server/api/market-data-routes.ts(233,17): error TS2304: Cannot find name 'futuresContracts'.
server/api/referral-routes.ts(10,12): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/api/referral-routes.ts(27,24): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/api/referral-routes.ts(38,36): error TS2353: Object literal may only specify known properties, and 'referralCode' does not exist in type '{ uid?: string | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>; username?: string | SQL<unknown> | PgColumn<ColumnBaseConfig<...>, {}, {}>; ... 4 more ...; id?: number | ... 1 more ... | PgColumn<...>; }'.
server/api/referral-routes.ts(44,43): error TS2304: Cannot find name 'referralEarnings'.
server/api/referral-routes.ts(46,13): error TS2304: Cannot find name 'referralEarnings'.
server/api/referral-routes.ts(47,17): error TS2304: Cannot find name 'referralEarnings'.
server/api/referral-routes.ts(52,45): error TS2304: Cannot find name 'referralEarnings'.
server/api/referral-routes.ts(54,13): error TS2304: Cannot find name 'referralEarnings'.
server/api/referral-routes.ts(55,17): error TS2304: Cannot find name 'referralEarnings'.
server/api/referral-routes.ts(63,45): error TS2304: Cannot find name 'referralEarnings'.
server/api/referral-routes.ts(65,13): error TS2304: Cannot find name 'referralEarnings'.
server/api/referral-routes.ts(68,14): error TS2304: Cannot find name 'referralEarnings'.
server/api/referral-routes.ts(69,17): error TS2304: Cannot find name 'referralEarnings'.
server/api/referral-routes.ts(76,13): error TS2304: Cannot find name 'referralEarnings'.
server/api/referral-routes.ts(77,17): error TS2304: Cannot find name 'referralEarnings'.
server/api/referral-routes.ts(78,21): error TS2304: Cannot find name 'referralEarnings'.
server/api/referral-routes.ts(79,26): error TS2304: Cannot find name 'referralEarnings'.
server/api/referral-routes.ts(80,20): error TS2304: Cannot find name 'referralEarnings'.
server/api/referral-routes.ts(83,13): error TS2304: Cannot find name 'referralEarnings'.
server/api/referral-routes.ts(84,38): error TS2304: Cannot find name 'referralEarnings'.
server/api/referral-routes.ts(85,17): error TS2304: Cannot find name 'referralEarnings'.
server/api/referral-routes.ts(86,21): error TS2304: Cannot find name 'referralEarnings'.
server/api/referral-routes.ts(115,28): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/api/referral-routes.ts(132,21): error TS2304: Cannot find name 'referralEarnings'.
server/api/spot-trading-routes.ts(6,3): error TS2300: Duplicate identifier 'transactions'.
server/api/spot-trading-routes.ts(8,3): error TS2300: Duplicate identifier 'transactions'.
server/api/spot-trading-routes.ts(17,12): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/api/spot-trading-routes.ts(30,13): error TS2304: Cannot find name 'spotOrders'.
server/api/spot-trading-routes.ts(31,17): error TS2304: Cannot find name 'spotOrders'.
server/api/spot-trading-routes.ts(31,40): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/api/spot-trading-routes.ts(32,21): error TS2304: Cannot find name 'spotOrders'.
server/api/spot-trading-routes.ts(96,37): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/api/spot-trading-routes.ts(122,13): error TS2353: Object literal may only specify known properties, and 'balance' does not exist in type '{ userId?: number | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>; currencyId?: number | SQL<unknown> | PgColumn<...>; id?: number | ... 1 more ... | PgColumn<...>; }'.
server/api/spot-trading-routes.ts(131,41): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/api/spot-trading-routes.ts(138,15): error TS2353: Object literal may only specify known properties, and 'balance' does not exist in type '{ userId?: number | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>; currencyId?: number | SQL<unknown> | PgColumn<...>; id?: number | ... 1 more ... | PgColumn<...>; }'.
server/api/spot-trading-routes.ts(143,41): error TS2769: No overload matches this call.
  Overload 1 of 2, '(value: { userId: number | SQL<unknown> | Placeholder<string, any>; currencyId: number | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<...>; }): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'balance' does not exist in type '{ userId: number | SQL<unknown> | Placeholder<string, any>; currencyId: number | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<...>; }'.
  Overload 2 of 2, '(values: { userId: number | SQL<unknown> | Placeholder<string, any>; currencyId: number | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<...>; }[]): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'userId' does not exist in type '{ userId: number | SQL<unknown> | Placeholder<string, any>; currencyId: number | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<...>; }[]'.
server/api/spot-trading-routes.ts(144,25): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/api/spot-trading-routes.ts(154,13): error TS2353: Object literal may only specify known properties, and 'balance' does not exist in type '{ userId?: number | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>; currencyId?: number | SQL<unknown> | PgColumn<...>; id?: number | ... 1 more ... | PgColumn<...>; }'.
server/api/spot-trading-routes.ts(163,41): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/api/spot-trading-routes.ts(172,15): error TS2353: Object literal may only specify known properties, and 'balance' does not exist in type '{ userId?: number | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>; currencyId?: number | SQL<unknown> | PgColumn<...>; id?: number | ... 1 more ... | PgColumn<...>; }'.
server/api/spot-trading-routes.ts(177,41): error TS2769: No overload matches this call.
  Overload 1 of 2, '(value: { userId: number | SQL<unknown> | Placeholder<string, any>; currencyId: number | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<...>; }): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'balance' does not exist in type '{ userId: number | SQL<unknown> | Placeholder<string, any>; currencyId: number | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<...>; }'.
  Overload 2 of 2, '(values: { userId: number | SQL<unknown> | Placeholder<string, any>; currencyId: number | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<...>; }[]): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'userId' does not exist in type '{ userId: number | SQL<unknown> | Placeholder<string, any>; currencyId: number | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<...>; }[]'.
server/api/spot-trading-routes.ts(178,25): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/api/spot-trading-routes.ts(187,37): error TS2769: No overload matches this call.
  Overload 1 of 2, '(value: { userId: number | SQL<unknown> | Placeholder<string, any>; type: string | SQL<unknown> | Placeholder<string, any>; currencyId: number | SQL<unknown> | Placeholder<...>; amount: number | ... 1 more ... | Placeholder<...>; id?: number | ... 1 more ... | Placeholder<...>; }): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'sourceId' does not exist in type '{ userId: number | SQL<unknown> | Placeholder<string, any>; type: string | SQL<unknown> | Placeholder<string, any>; currencyId: number | SQL<unknown> | Placeholder<...>; amount: number | ... 1 more ... | Placeholder<...>; id?: number | ... 1 more ... | Placeholder<...>; }'.
  Overload 2 of 2, '(values: { userId: number | SQL<unknown> | Placeholder<string, any>; type: string | SQL<unknown> | Placeholder<string, any>; currencyId: number | SQL<unknown> | Placeholder<...>; amount: number | ... 1 more ... | Placeholder<...>; id?: number | ... 1 more ... | Placeholder<...>; }[]): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'userId' does not exist in type '{ userId: number | SQL<unknown> | Placeholder<string, any>; type: string | SQL<unknown> | Placeholder<string, any>; currencyId: number | SQL<unknown> | Placeholder<...>; amount: number | ... 1 more ... | Placeholder<...>; id?: number | ... 1 more ... | Placeholder<...>; }[]'.
server/api/spot-trading-routes.ts(188,21): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/api/spot-trading-routes.ts(215,42): error TS2304: Cannot find name 'spotOrders'.
server/api/spot-trading-routes.ts(216,21): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/api/spot-trading-routes.ts(252,13): error TS2304: Cannot find name 'spotOrders'.
server/api/spot-trading-routes.ts(254,12): error TS2304: Cannot find name 'spotOrders'.
server/api/spot-trading-routes.ts(255,12): error TS2304: Cannot find name 'spotOrders'.
server/api/spot-trading-routes.ts(255,35): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/api/spot-trading-routes.ts(257,14): error TS2304: Cannot find name 'spotOrders'.
server/api/spot-trading-routes.ts(258,14): error TS2304: Cannot find name 'spotOrders'.
server/api/spot-trading-routes.ts(269,21): error TS2304: Cannot find name 'spotOrders'.
server/api/spot-trading-routes.ts(274,17): error TS2304: Cannot find name 'spotOrders'.
server/api/spot-trading-routes.ts(296,37): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/api/staking-routes.ts(5,32): error TS2307: Cannot find module '../services/trading.service' or its corresponding type declarations.
server/api/staking-routes.ts(11,12): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/api/staking-routes.ts(41,24): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/api/staking-routes.ts(76,24): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/api/staking-routes.ts(118,64): error TS2339: Property 'rate' does not exist on type '{ id: number; createdAt: Date; currencyId: number; apy: number; minAmount: number; maxAmount: number; lockPeriod: number; }'.
server/api/staking-routes.ts(141,24): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/api/staking-routes.ts(189,24): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/api/trading-routes.mongo.ts(4,10): error TS2305: Module '"../services/price.service"' has no exported member 'getLatestPrice'.
server/api/trading-routes.mongo.ts(11,12): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/api/trading-routes.mongo.ts(23,42): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = any>(filter: RootFilterQuery<any>, projection: ProjectionType<any>, options: QueryOptions<any> & { lean: true; }): Query<(FlattenMaps<...> & Required<...> & { ...; })[], ... 4 more ..., {}>; <ResultDoc = any>(filter: RootFilterQuery<...>, projection?: ProjectionType<...>, options?: QueryOptions<...>):...' has signatures, but none of those signatures are compatible with each other.
server/api/trading-routes.mongo.ts(41,42): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = any>(filter: RootFilterQuery<any>, projection: ProjectionType<any>, options: QueryOptions<any> & { lean: true; }): Query<(FlattenMaps<...> & Required<...> & { ...; })[], ... 4 more ..., {}>; <ResultDoc = any>(filter: RootFilterQuery<...>, projection?: ProjectionType<...>, options?: QueryOptions<...>):...' has signatures, but none of those signatures are compatible with each other.
server/api/trading-routes.mongo.ts(100,24): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/api/trading-routes.mongo.ts(163,24): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/api/trading-routes.mongo.ts(212,37): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = any>(filter: RootFilterQuery<any>, projection: ProjectionType<any>, options: QueryOptions<any> & { lean: true; }): Query<(FlattenMaps<...> & ... 1 more ... & { ...; })[] | (FlattenMaps<...> & ... 1 more ... & { ...; }), ... 4 more ..., {}>; <ResultDoc = any>(filter?: RootFilterQuery<...>, projection?:...' has signatures, but none of those signatures are compatible with each other.
server/api/verification-routes.ts(7,12): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/api/verification-routes.ts(38,24): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/api/verification-routes.ts(100,36): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(id: any, projection: ProjectionType<IUser>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(id: any, projection?: ProjectionType<...>, options?: QueryOp...' has signatures, but none of those signatures are compatible with each other.
server/api/verification-routes.ts(133,24): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/api/verification-routes.ts(135,25): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/api/verification-routes.ts(137,22): error TS2339: Property 'sessionID' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/api/verification-routes.ts(138,24): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/api/verification-routes.ts(149,29): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(id: any, projection: ProjectionType<IUser>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(id: any, projection?: ProjectionType<...>, options?: QueryOp...' has signatures, but none of those signatures are compatible with each other.
server/api/wallet-routes.ts(7,32): error TS2307: Cannot find module '../services/trading.service' or its corresponding type declarations.
server/api/wallet-routes.ts(8,10): error TS2305: Module '"../services/price.service"' has no exported member 'getLatestPrice'.
server/api/wallet-routes.ts(15,12): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/api/wallet-routes.ts(27,24): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/api/wallet-routes.ts(76,24): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/mongoStorage.ts(92,31): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(id: any, projection: ProjectionType<IUser>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(id: any, projection?: ProjectionType<...>, options?: QueryOp...' has signatures, but none of those signatures are compatible with each other.
server/mongoStorage.ts(119,7): error TS2739: Type '{ _id: any; uid: any; username: any; email: any; firstName: any; lastName: any; isAdmin: any; isVerified: boolean; profilePicture: any; preferences: any; favorites: any; createdAt: any; updatedAt: any; }' is missing the following properties from type 'IUser': password, balance
server/mongoStorage.ts(136,31): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(filter: RootFilterQuery<IUser>, projection: ProjectionType<...>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(filter?: RootFilterQuery<...>, projecti...' has signatures, but none of those signatures are compatible with each other.
server/mongoStorage.ts(138,29): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(filter: RootFilterQuery<IUser>, projection: ProjectionType<...>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(filter?: RootFilterQuery<...>, projecti...' has signatures, but none of those signatures are compatible with each other.
server/mongoStorage.ts(153,33): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(filter: RootFilterQuery<IUser>, projection: ProjectionType<...>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(filter?: RootFilterQuery<...>, projecti...' has signatures, but none of those signatures are compatible with each other.
server/mongoStorage.ts(178,41): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(filter: RootFilterQuery<IUser>, projection: ProjectionType<...>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(filter?: RootFilterQuery<...>, projecti...' has signatures, but none of those signatures are compatible with each other.
server/mongoStorage.ts(213,18): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(filter: RootFilterQuery<IUser>, update: UpdateQuery<...>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(id: any, update: UpdateQuery<...>, options: Qu...' has signatures, but none of those signatures are compatible with each other.
server/mongoStorage.ts(225,31): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(id: any, projection: ProjectionType<IUser>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(id: any, projection?: ProjectionType<...>, options?: QueryOp...' has signatures, but none of those signatures are compatible with each other.
server/mongoStorage.ts(241,18): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(filter: RootFilterQuery<IUser>, update: UpdateQuery<...>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(id: any, update: UpdateQuery<...>, options: Qu...' has signatures, but none of those signatures are compatible with each other.
server/mongoStorage.ts(254,18): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(filter: RootFilterQuery<IUser>, update: UpdateQuery<...>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(id: any, update: UpdateQuery<...>, options: Qu...' has signatures, but none of those signatures are compatible with each other.
server/mongoStorage.ts(266,31): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(id: any, projection: ProjectionType<IUser>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(id: any, projection?: ProjectionType<...>, options?: QueryOp...' has signatures, but none of those signatures are compatible with each other.
server/mongoStorage.ts(289,18): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(filter: RootFilterQuery<IUser>, update: UpdateQuery<...>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(id: any, update: UpdateQuery<...>, options: Qu...' has signatures, but none of those signatures are compatible with each other.
server/mongoStorage.ts(314,18): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(filter: RootFilterQuery<IUser>, update: UpdateQuery<...>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(id: any, update: UpdateQuery<...>, options: Qu...' has signatures, but none of those signatures are compatible with each other.
server/mongoStorage.ts(325,18): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(filter: RootFilterQuery<IUser>, update: UpdateQuery<...>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(id: any, update: UpdateQuery<...>, options: Qu...' has signatures, but none of those signatures are compatible with each other.
server/mongoStorage.ts(336,18): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(filter: RootFilterQuery<IUser>, update: UpdateQuery<...>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(id: any, update: UpdateQuery<...>, options: Qu...' has signatures, but none of those signatures are compatible with each other.
server/mongoStorage.ts(347,31): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(id: any, projection: ProjectionType<IUser>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(id: any, projection?: ProjectionType<...>, options?: QueryOp...' has signatures, but none of those signatures are compatible with each other.
server/mongoStorage.ts(381,18): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(filter: RootFilterQuery<IUser>, update: UpdateQuery<...>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(id: any, update: UpdateQuery<...>, options: Qu...' has signatures, but none of those signatures are compatible with each other.
server/mongoStorage.ts(399,31): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(id: any, projection: ProjectionType<IUser>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(id: any, projection?: ProjectionType<...>, options?: QueryOp...' has signatures, but none of those signatures are compatible with each other.
server/mongoStorage.ts(424,32): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(filter: RootFilterQuery<IUser>, projection: ProjectionType<...>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(filter: RootFilterQuery<...>, projectio...' has signatures, but none of those signatures are compatible with each other.
server/mongoStorage.ts(472,31): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(id: any, projection: ProjectionType<IUser>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(id: any, projection?: ProjectionType<...>, options?: QueryOp...' has signatures, but none of those signatures are compatible with each other.
server/mongoStorage.ts(478,42): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = any>(filter: RootFilterQuery<any>, projection: ProjectionType<any>, options: QueryOptions<any> & { lean: true; }): Query<(FlattenMaps<...> & ... 1 more ... & { ...; })[] | (FlattenMaps<...> & ... 1 more ... & { ...; }), ... 4 more ..., {}>; <ResultDoc = any>(filter?: RootFilterQuery<...>, projection?:...' has signatures, but none of those signatures are compatible with each other.
server/mongoStorage.ts(484,49): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = any>(filter: RootFilterQuery<any>, projection: ProjectionType<any>, options: QueryOptions<any> & { lean: true; }): Query<(FlattenMaps<...> & ... 1 more ... & { ...; })[] | (FlattenMaps<...> & ... 1 more ... & { ...; }), ... 4 more ..., {}>; <ResultDoc = any>(filter?: RootFilterQuery<...>, projection?:...' has signatures, but none of those signatures are compatible with each other.
server/mongoStorage.ts(494,27): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = any>(filter: RootFilterQuery<any>, update: UpdateQuery<any>, options: QueryOptions<any> & { includeResultMetadata: true; lean: true; }): Query<...>; <ResultDoc = any>(filter: RootFilterQuery<...>, update: UpdateQuery<...>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = any>(filter: R...' has signatures, but none of those signatures are compatible with each other.
server/mongoStorage.ts(503,27): error TS2349: This expression is not callable.
  Each member of the union type '{ <DocContents = AnyKeys<any>>(docs: any[], options: CreateOptions & { aggregateErrors: true; }): Promise<any[]>; <DocContents = AnyKeys<any>>(docs: any[], options?: CreateOptions): Promise<...>; <DocContents = AnyKeys<...>>(doc: any): Promise<...>; <DocContents = AnyKeys<...>>(...docs: any[]): Promise<...>; } | { ....' has signatures, but none of those signatures are compatible with each other.
server/mongoStorage.ts(516,18): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(filter: RootFilterQuery<IUser>, update: UpdateQuery<...>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(id: any, update: UpdateQuery<...>, options: Qu...' has signatures, but none of those signatures are compatible with each other.
server/mongoStorage.ts(528,9): error TS2393: Duplicate function implementation.
server/mongoStorage.ts(537,31): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(id: any, projection: ProjectionType<IUser>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(id: any, projection?: ProjectionType<...>, options?: QueryOp...' has signatures, but none of those signatures are compatible with each other.
server/mongoStorage.ts(543,42): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = any>(filter: RootFilterQuery<any>, projection: ProjectionType<any>, options: QueryOptions<any> & { lean: true; }): Query<(FlattenMaps<...> & ... 1 more ... & { ...; })[] | (FlattenMaps<...> & ... 1 more ... & { ...; }), ... 4 more ..., {}>; <ResultDoc = any>(filter?: RootFilterQuery<...>, projection?:...' has signatures, but none of those signatures are compatible with each other.
server/mongoStorage.ts(549,49): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = any>(filter: RootFilterQuery<any>, projection: ProjectionType<any>, options: QueryOptions<any> & { lean: true; }): Query<(FlattenMaps<...> & ... 1 more ... & { ...; })[] | (FlattenMaps<...> & ... 1 more ... & { ...; }), ... 4 more ..., {}>; <ResultDoc = any>(filter?: RootFilterQuery<...>, projection?:...' has signatures, but none of those signatures are compatible with each other.
server/mongoStorage.ts(565,25): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = any>(filter: RootFilterQuery<any>, update: UpdateQuery<any>, options: QueryOptions<any> & { includeResultMetadata: true; lean: true; }): Query<...>; <ResultDoc = any>(filter: RootFilterQuery<...>, update: UpdateQuery<...>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = any>(filter: R...' has signatures, but none of those signatures are compatible with each other.
server/mongoStorage.ts(577,18): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(filter: RootFilterQuery<IUser>, update: UpdateQuery<...>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(id: any, update: UpdateQuery<...>, options: Qu...' has signatures, but none of those signatures are compatible with each other.
server/mongoStorage.ts(589,9): error TS2393: Duplicate function implementation.
server/mongoStorage.ts(598,31): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(id: any, projection: ProjectionType<IUser>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(id: any, projection?: ProjectionType<...>, options?: QueryOp...' has signatures, but none of those signatures are compatible with each other.
server/mongoStorage.ts(604,42): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = any>(filter: RootFilterQuery<any>, projection: ProjectionType<any>, options: QueryOptions<any> & { lean: true; }): Query<(FlattenMaps<...> & ... 1 more ... & { ...; })[] | (FlattenMaps<...> & ... 1 more ... & { ...; }), ... 4 more ..., {}>; <ResultDoc = any>(filter?: RootFilterQuery<...>, projection?:...' has signatures, but none of those signatures are compatible with each other.
server/mongoStorage.ts(610,49): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = any>(filter: RootFilterQuery<any>, projection: ProjectionType<any>, options: QueryOptions<any> & { lean: true; }): Query<(FlattenMaps<...> & ... 1 more ... & { ...; })[] | (FlattenMaps<...> & ... 1 more ... & { ...; }), ... 4 more ..., {}>; <ResultDoc = any>(filter?: RootFilterQuery<...>, projection?:...' has signatures, but none of those signatures are compatible with each other.
server/mongoStorage.ts(626,27): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = any>(filter: RootFilterQuery<any>, update: UpdateQuery<any>, options: QueryOptions<any> & { includeResultMetadata: true; lean: true; }): Query<...>; <ResultDoc = any>(filter: RootFilterQuery<...>, update: UpdateQuery<...>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = any>(filter: R...' has signatures, but none of those signatures are compatible with each other.
server/mongoStorage.ts(642,18): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(filter: RootFilterQuery<IUser>, update: UpdateQuery<...>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(id: any, update: UpdateQuery<...>, options: Qu...' has signatures, but none of those signatures are compatible with each other.
server/mongoStorage.ts(656,18): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(id: any, options: QueryOptions<IUser> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(id: any, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ......' has signatures, but none of those signatures are compatible with each other.
server/mongoStorage.ts(664,9): error TS2416: Property 'getUserBalance' in type 'MongoStorage' is not assignable to the same property in base type 'IMongoStorage'.
  Type '(userId: string, currency?: string) => Promise<{ balance: number; }>' is not assignable to type '(userId: string) => Promise<number>'.
    Type 'Promise<{ balance: number; }>' is not assignable to type 'Promise<number>'.
      Type '{ balance: number; }' is not assignable to type 'number'.
server/mongoStorage.ts(666,31): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(id: any, projection: ProjectionType<IUser>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(id: any, projection?: ProjectionType<...>, options?: QueryOp...' has signatures, but none of those signatures are compatible with each other.
server/mongoStorage.ts(682,31): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(id: any, projection: ProjectionType<IUser>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(id: any, projection?: ProjectionType<...>, options?: QueryOp...' has signatures, but none of those signatures are compatible with each other.
server/mongoStorage.ts(696,18): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(filter: RootFilterQuery<IUser>, update: UpdateQuery<...>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(id: any, update: UpdateQuery<...>, options: Qu...' has signatures, but none of those signatures are compatible with each other.
server/mongodb.ts(62,41): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(filter: RootFilterQuery<IUser>, projection: ProjectionType<...>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(filter?: RootFilterQuery<...>, projecti...' has signatures, but none of those signatures are compatible with each other.
server/mongodb.ts(80,42): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(filter: RootFilterQuery<IUser>, projection: ProjectionType<...>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(filter?: RootFilterQuery<...>, projecti...' has signatures, but none of those signatures are compatible with each other.
server/mongodb.ts(107,47): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = any>(filter: RootFilterQuery<any>, projection: ProjectionType<any>, options: QueryOptions<any> & { lean: true; }): Query<(FlattenMaps<...> & ... 1 more ... & { ...; })[] | (FlattenMaps<...> & ... 1 more ... & { ...; }), ... 4 more ..., {}>; <ResultDoc = any>(filter?: RootFilterQuery<...>, projection?:...' has signatures, but none of those signatures are compatible with each other.
server/mongodb.ts(116,40): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = any>(filter: RootFilterQuery<any>, projection: ProjectionType<any>, options: QueryOptions<any> & { lean: true; }): Query<(FlattenMaps<...> & ... 1 more ... & { ...; })[] | (FlattenMaps<...> & ... 1 more ... & { ...; }), ... 4 more ..., {}>; <ResultDoc = any>(filter?: RootFilterQuery<...>, projection?:...' has signatures, but none of those signatures are compatible with each other.
server/mongodb.ts(117,40): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = any>(filter: RootFilterQuery<any>, projection: ProjectionType<any>, options: QueryOptions<any> & { lean: true; }): Query<(FlattenMaps<...> & ... 1 more ... & { ...; })[] | (FlattenMaps<...> & ... 1 more ... & { ...; }), ... 4 more ..., {}>; <ResultDoc = any>(filter?: RootFilterQuery<...>, projection?:...' has signatures, but none of those signatures are compatible with each other.
server/mongodb.ts(118,40): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = any>(filter: RootFilterQuery<any>, projection: ProjectionType<any>, options: QueryOptions<any> & { lean: true; }): Query<(FlattenMaps<...> & ... 1 more ... & { ...; })[] | (FlattenMaps<...> & ... 1 more ... & { ...; }), ... 4 more ..., {}>; <ResultDoc = any>(filter?: RootFilterQuery<...>, projection?:...' has signatures, but none of those signatures are compatible with each other.
server/routes.mongo.ts(28,16): error TS2665: Invalid module name in augmentation. Module 'express-session' resolves to an untyped module at '/opt/render/project/src/Nedaxer/node_modules/express-session/index.js', which cannot be augmented.
server/routes.mongo.ts(42,23): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(43,17): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(44,20): error TS2339: Property 'sessionID' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(47,12): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(52,11): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(52,48): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(58,22): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(71,13): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(72,11): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(83,12): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(87,42): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(95,12): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(99,42): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(315,31): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(filter: RootFilterQuery<IUser>, projection: ProjectionType<...>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(filter?: RootFilterQuery<...>, projecti...' has signatures, but none of those signatures are compatible with each other.
server/routes.mongo.ts(351,26): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(373,31): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(id: any, projection: ProjectionType<IUser>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(id: any, projection?: ProjectionType<...>, options?: QueryOp...' has signatures, but none of those signatures are compatible with each other.
server/routes.mongo.ts(395,18): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(filter: RootFilterQuery<IUser>, update: UpdateQuery<...>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(id: any, update: UpdateQuery<...>, options: Qu...' has signatures, but none of those signatures are compatible with each other.
server/routes.mongo.ts(433,26): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(474,33): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(id: any, projection: ProjectionType<IUser>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(id: any, projection?: ProjectionType<...>, options?: QueryOp...' has signatures, but none of those signatures are compatible with each other.
server/routes.mongo.ts(498,44): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = any>(filter: RootFilterQuery<any>, projection: ProjectionType<any>, options: QueryOptions<any> & { lean: true; }): Query<(FlattenMaps<...> & ... 1 more ... & { ...; })[] | (FlattenMaps<...> & ... 1 more ... & { ...; }), ... 4 more ..., {}>; <ResultDoc = any>(filter?: RootFilterQuery<...>, projection?:...' has signatures, but none of those signatures are compatible with each other.
server/routes.mongo.ts(504,49): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = any>(filter: RootFilterQuery<any>, projection: ProjectionType<any>, options: QueryOptions<any> & { lean: true; }): Query<(FlattenMaps<...> & ... 1 more ... & { ...; })[] | (FlattenMaps<...> & ... 1 more ... & { ...; }), ... 4 more ..., {}>; <ResultDoc = any>(filter?: RootFilterQuery<...>, projection?:...' has signatures, but none of those signatures are compatible with each other.
server/routes.mongo.ts(521,50): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = any>(filter: RootFilterQuery<any>, projection: ProjectionType<any>, options: QueryOptions<any> & { lean: true; }): Query<(FlattenMaps<...> & ... 1 more ... & { ...; })[] | (FlattenMaps<...> & ... 1 more ... & { ...; }), ... 4 more ..., {}>; <ResultDoc = any>(filter?: RootFilterQuery<...>, projection?:...' has signatures, but none of those signatures are compatible with each other.
server/routes.mongo.ts(564,35): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(id: any, projection: ProjectionType<IUser>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(id: any, projection?: ProjectionType<...>, options?: QueryOp...' has signatures, but none of those signatures are compatible with each other.
server/routes.mongo.ts(565,38): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(id: any, projection: ProjectionType<IUser>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(id: any, projection?: ProjectionType<...>, options?: QueryOp...' has signatures, but none of those signatures are compatible with each other.
server/routes.mongo.ts(681,26): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(685,40): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(690,45): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = any>(filter: RootFilterQuery<any>, projection: ProjectionType<any>, options: QueryOptions<any> & { lean: true; }): Query<(FlattenMaps<...> & Required<...> & { ...; })[], ... 4 more ..., {}>; <ResultDoc = any>(filter: RootFilterQuery<...>, projection?: ProjectionType<...>, options?: QueryOptions<...>):...' has signatures, but none of those signatures are compatible with each other.
server/routes.mongo.ts(739,40): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = any>(filter: RootFilterQuery<any>, projection: ProjectionType<any>, options: QueryOptions<any> & { lean: true; }): Query<(FlattenMaps<...> & Required<...> & { ...; })[], ... 4 more ..., {}>; <ResultDoc = any>(filter: RootFilterQuery<...>, projection?: ProjectionType<...>, options?: QueryOptions<...>):...' has signatures, but none of those signatures are compatible with each other.
server/routes.mongo.ts(807,26): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(815,39): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = any>(filter: RootFilterQuery<any>, projection: ProjectionType<any>, options: QueryOptions<any> & { lean: true; }): Query<(FlattenMaps<...> & ... 1 more ... & { ...; })[] | (FlattenMaps<...> & ... 1 more ... & { ...; }), ... 4 more ..., {}>; <ResultDoc = any>(filter?: RootFilterQuery<...>, projection?:...' has signatures, but none of those signatures are compatible with each other.
server/routes.mongo.ts(1248,16): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(1252,60): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(1256,51): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(1259,61): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(1262,13): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(1393,44): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = any>(filter: RootFilterQuery<any>, projection: ProjectionType<any>, options: QueryOptions<any> & { lean: true; }): Query<(FlattenMaps<...> & ... 1 more ... & { ...; })[] | (FlattenMaps<...> & ... 1 more ... & { ...; }), ... 4 more ..., {}>; <ResultDoc = any>(filter?: RootFilterQuery<...>, projection?:...' has signatures, but none of those signatures are compatible with each other.
server/routes.mongo.ts(1412,11): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(1496,13): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(1497,13): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(1500,13): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(1552,11): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(1580,9): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(1628,13): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(1643,26): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(1663,26): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(1719,26): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(1732,26): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(1745,26): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(1757,26): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(1770,26): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(1782,26): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(1791,42): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = any>(filter: RootFilterQuery<any>, projection: ProjectionType<any>, options: QueryOptions<any> & { lean: true; }): Query<(FlattenMaps<...> & ... 1 more ... & { ...; })[] | (FlattenMaps<...> & ... 1 more ... & { ...; }), ... 4 more ..., {}>; <ResultDoc = any>(filter?: RootFilterQuery<...>, projection?:...' has signatures, but none of those signatures are compatible with each other.
server/routes.mongo.ts(1801,42): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = any>(filter: RootFilterQuery<any>, projection: ProjectionType<any>, options: QueryOptions<any> & { lean: true; }): Query<(FlattenMaps<...> & ... 1 more ... & { ...; })[] | (FlattenMaps<...> & ... 1 more ... & { ...; }), ... 4 more ..., {}>; <ResultDoc = any>(filter?: RootFilterQuery<...>, projection?:...' has signatures, but none of those signatures are compatible with each other.
server/routes.mongo.ts(1808,40): error TS2349: This expression is not callable.
  Each member of the union type '{ <DocContents = AnyKeys<any>>(docs: any[], options: CreateOptions & { aggregateErrors: true; }): Promise<any[]>; <DocContents = AnyKeys<any>>(docs: any[], options?: CreateOptions): Promise<...>; <DocContents = AnyKeys<...>>(doc: any): Promise<...>; <DocContents = AnyKeys<...>>(...docs: any[]): Promise<...>; } | { ....' has signatures, but none of those signatures are compatible with each other.
server/routes.mongo.ts(1849,42): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = any>(filter: RootFilterQuery<any>, projection: ProjectionType<any>, options: QueryOptions<any> & { lean: true; }): Query<(FlattenMaps<...> & ... 1 more ... & { ...; })[] | (FlattenMaps<...> & ... 1 more ... & { ...; }), ... 4 more ..., {}>; <ResultDoc = any>(filter?: RootFilterQuery<...>, projection?:...' has signatures, but none of those signatures are compatible with each other.
server/routes.mongo.ts(1853,27): error TS2349: This expression is not callable.
  Each member of the union type '{ (filter?: RootFilterQuery<any>, options?: DeleteOptions & Pick<QueryOptions<any>, MongooseBaseQueryOptionKeys> & { ...; }): Query<...>; (filter: RootFilterQuery<...>): Query<...>; } | { ...; }' has signatures, but none of those signatures are compatible with each other.
server/routes.mongo.ts(1882,26): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(1891,42): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = any>(filter: RootFilterQuery<any>, projection: ProjectionType<any>, options: QueryOptions<any> & { lean: true; }): Query<(FlattenMaps<...> & ... 1 more ... & { ...; })[] | (FlattenMaps<...> & ... 1 more ... & { ...; }), ... 4 more ..., {}>; <ResultDoc = any>(filter?: RootFilterQuery<...>, projection?:...' has signatures, but none of those signatures are compatible with each other.
server/routes.mongo.ts(1904,42): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = any>(filter: RootFilterQuery<any>, projection: ProjectionType<any>, options: QueryOptions<any> & { lean: true; }): Query<(FlattenMaps<...> & ... 1 more ... & { ...; })[] | (FlattenMaps<...> & ... 1 more ... & { ...; }), ... 4 more ..., {}>; <ResultDoc = any>(filter?: RootFilterQuery<...>, projection?:...' has signatures, but none of those signatures are compatible with each other.
server/routes.mongo.ts(1911,40): error TS2349: This expression is not callable.
  Each member of the union type '{ <DocContents = AnyKeys<any>>(docs: any[], options: CreateOptions & { aggregateErrors: true; }): Promise<any[]>; <DocContents = AnyKeys<any>>(docs: any[], options?: CreateOptions): Promise<...>; <DocContents = AnyKeys<...>>(doc: any): Promise<...>; <DocContents = AnyKeys<...>>(...docs: any[]): Promise<...>; } | { ....' has signatures, but none of those signatures are compatible with each other.
server/routes.mongo.ts(1977,13): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(1978,13): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(1979,55): error TS2339: Property 'sessionID' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(1981,13): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(2001,9): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(2013,28): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(2014,22): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(2015,22): error TS2339: Property 'sessionID' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(2018,14): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(2027,26): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(2034,40): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = any>(filter: RootFilterQuery<any>, projection: ProjectionType<any>, options: QueryOptions<any> & { lean: true; }): Query<(FlattenMaps<...> & Required<...> & { ...; })[], ... 4 more ..., {}>; <ResultDoc = any>(filter: RootFilterQuery<...>, projection?: ProjectionType<...>, options?: QueryOptions<...>):...' has signatures, but none of those signatures are compatible with each other.
server/routes.mongo.ts(2073,32): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(filter: RootFilterQuery<IUser>, projection: ProjectionType<...>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(filter: RootFilterQuery<...>, projectio...' has signatures, but none of those signatures are compatible with each other.
server/routes.mongo.ts(2080,45): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = any>(filter: RootFilterQuery<any>, projection: ProjectionType<any>, options: QueryOptions<any> & { lean: true; }): Query<(FlattenMaps<...> & ... 1 more ... & { ...; })[] | (FlattenMaps<...> & ... 1 more ... & { ...; }), ... 4 more ..., {}>; <ResultDoc = any>(filter?: RootFilterQuery<...>, projection?:...' has signatures, but none of those signatures are compatible with each other.
server/routes.mongo.ts(2104,32): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(filter: RootFilterQuery<IUser>, projection: ProjectionType<...>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(filter: RootFilterQuery<...>, projectio...' has signatures, but none of those signatures are compatible with each other.
server/routes.mongo.ts(2111,45): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = any>(filter: RootFilterQuery<any>, projection: ProjectionType<any>, options: QueryOptions<any> & { lean: true; }): Query<(FlattenMaps<...> & ... 1 more ... & { ...; })[] | (FlattenMaps<...> & ... 1 more ... & { ...; }), ... 4 more ..., {}>; <ResultDoc = any>(filter?: RootFilterQuery<...>, projection?:...' has signatures, but none of those signatures are compatible with each other.
server/routes.mongo.ts(2273,31): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(id: any, projection: ProjectionType<IUser>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(id: any, projection?: ProjectionType<...>, options?: QueryOp...' has signatures, but none of those signatures are compatible with each other.
server/routes.mongo.ts(2314,31): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(id: any, projection: ProjectionType<IUser>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(id: any, projection?: ProjectionType<...>, options?: QueryOp...' has signatures, but none of those signatures are compatible with each other.
server/routes.mongo.ts(2324,18): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(filter: RootFilterQuery<IUser>, update: UpdateQuery<...>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(id: any, update: UpdateQuery<...>, options: Qu...' has signatures, but none of those signatures are compatible with each other.
server/routes.mongo.ts(2368,31): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(id: any, projection: ProjectionType<IUser>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(id: any, projection?: ProjectionType<...>, options?: QueryOp...' has signatures, but none of those signatures are compatible with each other.
server/routes.mongo.ts(2377,20): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(filter: RootFilterQuery<IUser>, update: UpdateQuery<...>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(id: any, update: UpdateQuery<...>, options: Qu...' has signatures, but none of those signatures are compatible with each other.
server/routes.mongo.ts(2385,22): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(filter: RootFilterQuery<IUser>, update: UpdateQuery<...>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(id: any, update: UpdateQuery<...>, options: Qu...' has signatures, but none of those signatures are compatible with each other.
server/routes.mongo.ts(2393,20): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(filter: RootFilterQuery<IUser>, update: UpdateQuery<...>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(id: any, update: UpdateQuery<...>, options: Qu...' has signatures, but none of those signatures are compatible with each other.
server/routes.mongo.ts(2408,26): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(2411,31): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(id: any, projection: ProjectionType<IUser>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(id: any, projection?: ProjectionType<...>, options?: QueryOp...' has signatures, but none of those signatures are compatible with each other.
server/routes.mongo.ts(2436,26): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(2439,31): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(id: any, projection: ProjectionType<IUser>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(id: any, projection?: ProjectionType<...>, options?: QueryOp...' has signatures, but none of those signatures are compatible with each other.
server/routes.mongo.ts(2496,31): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(filter: RootFilterQuery<IUser>, update: UpdateQuery<...>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(id: any, update: UpdateQuery<...>, options: Qu...' has signatures, but none of those signatures are compatible with each other.
server/routes.mongo.ts(2506,41): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(id: any, projection: ProjectionType<IUser>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(id: any, projection?: ProjectionType<...>, options?: QueryOp...' has signatures, but none of those signatures are compatible with each other.
server/routes.mongo.ts(2567,31): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(filter: RootFilterQuery<IUser>, update: UpdateQuery<...>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(id: any, update: UpdateQuery<...>, options: Qu...' has signatures, but none of those signatures are compatible with each other.
server/routes.mongo.ts(2634,31): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(filter: RootFilterQuery<IUser>, update: UpdateQuery<...>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(id: any, update: UpdateQuery<...>, options: Qu...' has signatures, but none of those signatures are compatible with each other.
server/routes.mongo.ts(2695,31): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(filter: RootFilterQuery<IUser>, update: UpdateQuery<...>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(id: any, update: UpdateQuery<...>, options: Qu...' has signatures, but none of those signatures are compatible with each other.
server/routes.mongo.ts(2755,31): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(filter: RootFilterQuery<IUser>, update: UpdateQuery<...>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(id: any, update: UpdateQuery<...>, options: Qu...' has signatures, but none of those signatures are compatible with each other.
server/routes.mongo.ts(2824,26): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(2839,31): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(id: any, projection: ProjectionType<IUser>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(id: any, projection?: ProjectionType<...>, options?: QueryOp...' has signatures, but none of those signatures are compatible with each other.
server/routes.mongo.ts(2887,14): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(filter: RootFilterQuery<IUser>, projection: ProjectionType<...>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(filter: RootFilterQuery<...>, projectio...' has signatures, but none of those signatures are compatible with each other.
server/routes.mongo.ts(3042,27): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(3151,67): error TS2339: Property 'toFixed' does not exist on type '{ balance: number; }'.
server/routes.mongo.ts(3156,27): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(3236,33): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(3277,33): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(3278,27): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(3307,33): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(3308,27): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(3324,26): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(3343,31): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(id: any, projection: ProjectionType<IUser>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(id: any, projection?: ProjectionType<...>, options?: QueryOp...' has signatures, but none of those signatures are compatible with each other.
server/routes.mongo.ts(3369,26): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(3495,33): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(3535,33): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(3536,27): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(3565,33): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(3566,27): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(3582,26): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(3608,26): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(3676,27): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(3798,31): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(filter: RootFilterQuery<IUser>, update: UpdateQuery<...>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(id: any, update: UpdateQuery<...>, options: Qu...' has signatures, but none of those signatures are compatible with each other.
server/routes.mongo.ts(3953,22): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(4025,44): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(4108,21): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(4133,44): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(4170,26): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/routes.mongo.ts(4431,26): error TS2339: Property 'session' does not exist on type 'Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
server/services/deposit.service.ts(7,3): error TS2724: '"@shared/schema"' has no exported member named 'UserWallet'. Did you mean 'userWallets'?
server/services/deposit.service.ts(11,32): error TS2307: Cannot find module './trading.service' or its corresponding type declarations.
server/services/deposit.service.ts(12,10): error TS2305: Module '"./price.service"' has no exported member 'getLatestPrice'.
server/services/deposit.service.ts(59,43): error TS2339: Property 'generateBitcoinWallet' does not exist on type 'WalletService'.
server/services/deposit.service.ts(63,43): error TS2339: Property 'generateEthereumWallet' does not exist on type 'WalletService'.
server/services/deposit.service.ts(66,43): error TS2339: Property 'generateBinanceWallet' does not exist on type 'WalletService'.
server/services/deposit.service.ts(74,51): error TS2339: Property 'encryptPrivateKey' does not exist on type 'WalletService'.
server/services/deposit.service.ts(79,12): error TS2769: No overload matches this call.
  Overload 1 of 2, '(value: { userId: number | SQL<unknown> | Placeholder<string, any>; currencyId: number | SQL<unknown> | Placeholder<string, any>; address: string | SQL<unknown> | Placeholder<...>; id?: number | ... 1 more ... | Placeholder<...>; }): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'hdPath' does not exist in type '{ userId: number | SQL<unknown> | Placeholder<string, any>; currencyId: number | SQL<unknown> | Placeholder<string, any>; address: string | SQL<unknown> | Placeholder<...>; id?: number | ... 1 more ... | Placeholder<...>; }'.
  Overload 2 of 2, '(values: { userId: number | SQL<unknown> | Placeholder<string, any>; currencyId: number | SQL<unknown> | Placeholder<string, any>; address: string | SQL<unknown> | Placeholder<...>; id?: number | ... 1 more ... | Placeholder<...>; }[]): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'userId' does not exist in type '{ userId: number | SQL<unknown> | Placeholder<string, any>; currencyId: number | SQL<unknown> | Placeholder<string, any>; address: string | SQL<unknown> | Placeholder<...>; id?: number | ... 1 more ... | Placeholder<...>; }[]'.
server/services/deposit.service.ts(162,29): error TS2339: Property 'hdPath' does not exist on type '{ id: number; userId: number; currencyId: number; address: string; privateKey: string; publicKey: string; createdAt: Date; }'.
server/services/deposit.service.ts(202,31): error TS2339: Property 'targetId' does not exist on type 'PgTableWithColumns<{ name: "transactions"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "transactions"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; ... 8 more ...; generated: undefined; }, {}, {}>; ... 10 more ...; updatedAt: PgColumn<...>; }; diale...'.
server/services/deposit.service.ts(217,43): error TS2339: Property 'checkBitcoinBalance' does not exist on type 'WalletService'.
server/services/deposit.service.ts(220,43): error TS2339: Property 'checkEthereumBalance' does not exist on type 'WalletService'.
server/services/deposit.service.ts(223,43): error TS2339: Property 'checkBinanceBalance' does not exist on type 'WalletService'.
server/services/deposit.service.ts(226,43): error TS2339: Property 'checkUSDTBalance' does not exist on type 'WalletService'.
server/services/deposit.service.ts(239,33): error TS2339: Property 'targetId' does not exist on type 'PgTableWithColumns<{ name: "transactions"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "transactions"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; ... 8 more ...; generated: undefined; }, {}, {}>; ... 10 more ...; updatedAt: PgColumn<...>; }; diale...'.
server/services/deposit.service.ts(240,33): error TS2339: Property 'targetAmount' does not exist on type 'PgTableWithColumns<{ name: "transactions"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "transactions"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; ... 8 more ...; generated: undefined; }, {}, {}>; ... 10 more ...; updatedAt: PgColumn<...>; }; diale...'.
server/services/deposit.service.ts(258,16): error TS2769: No overload matches this call.
  Overload 1 of 2, '(value: { userId: number | SQL<unknown> | Placeholder<string, any>; type: string | SQL<unknown> | Placeholder<string, any>; currencyId: number | SQL<unknown> | Placeholder<...>; amount: number | ... 1 more ... | Placeholder<...>; id?: number | ... 1 more ... | Placeholder<...>; }): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'sourceId' does not exist in type '{ userId: number | SQL<unknown> | Placeholder<string, any>; type: string | SQL<unknown> | Placeholder<string, any>; currencyId: number | SQL<unknown> | Placeholder<...>; amount: number | ... 1 more ... | Placeholder<...>; id?: number | ... 1 more ... | Placeholder<...>; }'.
  Overload 2 of 2, '(values: { userId: number | SQL<unknown> | Placeholder<string, any>; type: string | SQL<unknown> | Placeholder<string, any>; currencyId: number | SQL<unknown> | Placeholder<...>; amount: number | ... 1 more ... | Placeholder<...>; id?: number | ... 1 more ... | Placeholder<...>; }[]): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'userId' does not exist in type '{ userId: number | SQL<unknown> | Placeholder<string, any>; type: string | SQL<unknown> | Placeholder<string, any>; currencyId: number | SQL<unknown> | Placeholder<...>; amount: number | ... 1 more ... | Placeholder<...>; id?: number | ... 1 more ... | Placeholder<...>; }[]'.
server/services/staking.service.ts(12,32): error TS2307: Cannot find module './trading.service' or its corresponding type declarations.
server/services/staking.service.ts(29,30): error TS2339: Property 'isActive' does not exist on type 'PgTableWithColumns<{ name: "staking_rates"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "staking_rates"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; ... 8 more ...; generated: undefined; }, {}, {}>; ... 5 more ...; createdAt: PgColumn<...>; }; dial...'.
server/services/staking.service.ts(47,27): error TS2339: Property 'isActive' does not exist on type 'PgTableWithColumns<{ name: "staking_rates"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "staking_rates"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; ... 8 more ...; generated: undefined; }, {}, {}>; ... 5 more ...; createdAt: PgColumn<...>; }; dial...'.
server/services/staking.service.ts(86,8): error TS2769: No overload matches this call.
  Overload 1 of 2, '(value: { userId: number | SQL<unknown> | Placeholder<string, any>; currencyId: number | SQL<unknown> | Placeholder<string, any>; amount: number | SQL<unknown> | Placeholder<...>; apy: number | ... 1 more ... | Placeholder<...>; id?: number | ... 1 more ... | Placeholder<...>; }): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'rate' does not exist in type '{ userId: number | SQL<unknown> | Placeholder<string, any>; currencyId: number | SQL<unknown> | Placeholder<string, any>; amount: number | SQL<unknown> | Placeholder<...>; apy: number | ... 1 more ... | Placeholder<...>; id?: number | ... 1 more ... | Placeholder<...>; }'.
  Overload 2 of 2, '(values: { userId: number | SQL<unknown> | Placeholder<string, any>; currencyId: number | SQL<unknown> | Placeholder<string, any>; amount: number | SQL<unknown> | Placeholder<...>; apy: number | ... 1 more ... | Placeholder<...>; id?: number | ... 1 more ... | Placeholder<...>; }[]): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'userId' does not exist in type '{ userId: number | SQL<unknown> | Placeholder<string, any>; currencyId: number | SQL<unknown> | Placeholder<string, any>; amount: number | SQL<unknown> | Placeholder<...>; apy: number | ... 1 more ... | Placeholder<...>; id?: number | ... 1 more ... | Placeholder<...>; }[]'.
server/services/staking.service.ts(90,27): error TS2339: Property 'rate' does not exist on type '{ id: number; createdAt: Date; currencyId: number; apy: number; minAmount: number; maxAmount: number; lockPeriod: number; }'.
server/services/staking.service.ts(103,8): error TS2769: No overload matches this call.
  Overload 1 of 2, '(value: { userId: number | SQL<unknown> | Placeholder<string, any>; type: string | SQL<unknown> | Placeholder<string, any>; currencyId: number | SQL<unknown> | Placeholder<...>; amount: number | ... 1 more ... | Placeholder<...>; id?: number | ... 1 more ... | Placeholder<...>; }): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'sourceId' does not exist in type '{ userId: number | SQL<unknown> | Placeholder<string, any>; type: string | SQL<unknown> | Placeholder<string, any>; currencyId: number | SQL<unknown> | Placeholder<...>; amount: number | ... 1 more ... | Placeholder<...>; id?: number | ... 1 more ... | Placeholder<...>; }'.
  Overload 2 of 2, '(values: { userId: number | SQL<unknown> | Placeholder<string, any>; type: string | SQL<unknown> | Placeholder<string, any>; currencyId: number | SQL<unknown> | Placeholder<...>; amount: number | ... 1 more ... | Placeholder<...>; id?: number | ... 1 more ... | Placeholder<...>; }[]): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'userId' does not exist in type '{ userId: number | SQL<unknown> | Placeholder<string, any>; type: string | SQL<unknown> | Placeholder<string, any>; currencyId: number | SQL<unknown> | Placeholder<...>; amount: number | ... 1 more ... | Placeholder<...>; id?: number | ... 1 more ... | Placeholder<...>; }[]'.
server/services/staking.service.ts(111,46): error TS2339: Property 'rate' does not exist on type '{ id: number; createdAt: Date; currencyId: number; apy: number; minAmount: number; maxAmount: number; lockPeriod: number; }'.
server/services/staking.service.ts(151,35): error TS2339: Property 'lastRewardAt' does not exist on type '{ id: number; createdAt: Date; userId: number; currencyId: number; updatedAt: Date; amount: number; status: string; apy: number; startDate: Date; endDate: Date; rewards: number; }'.
server/services/staking.service.ts(161,32): error TS2339: Property 'rate' does not exist on type '{ id: number; createdAt: Date; userId: number; currencyId: number; updatedAt: Date; amount: number; status: string; apy: number; startDate: Date; endDate: Date; rewards: number; }'.
server/services/staking.service.ts(194,9): error TS2353: Object literal may only specify known properties, and 'lastRewardAt' does not exist in type '{ userId?: number | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>; currencyId?: number | SQL<unknown> | PgColumn<...>; amount?: number | ... 1 more ... | PgColumn<...>; apy?: number | ... 1 more ... | PgColumn<...>; id?: number | ... 1 more ... | PgColumn<...>; }'.
server/services/staking.service.ts(195,38): error TS2339: Property 'accumulatedRewards' does not exist on type '{ id: number; userId: number; currencyId: number; amount: number; apy: number; startDate: Date; endDate: Date; status: string; rewards: number; createdAt: Date; updatedAt: Date; }'.
server/services/staking.service.ts(210,35): error TS2339: Property 'accumulatedRewards' does not exist on type '{ id: number; createdAt: Date; userId: number; currencyId: number; updatedAt: Date; amount: number; status: string; apy: number; startDate: Date; endDate: Date; rewards: number; }'.
server/services/staking.service.ts(227,9): error TS2353: Object literal may only specify known properties, and 'status' does not exist in type '{ userId?: number | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>; currencyId?: number | SQL<unknown> | PgColumn<...>; amount?: number | ... 1 more ... | PgColumn<...>; apy?: number | ... 1 more ... | PgColumn<...>; id?: number | ... 1 more ... | PgColumn<...>; }'.
server/services/staking.service.ts(242,8): error TS2769: No overload matches this call.
  Overload 1 of 2, '(value: { userId: number | SQL<unknown> | Placeholder<string, any>; type: string | SQL<unknown> | Placeholder<string, any>; currencyId: number | SQL<unknown> | Placeholder<...>; amount: number | ... 1 more ... | Placeholder<...>; id?: number | ... 1 more ... | Placeholder<...>; }): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'sourceId' does not exist in type '{ userId: number | SQL<unknown> | Placeholder<string, any>; type: string | SQL<unknown> | Placeholder<string, any>; currencyId: number | SQL<unknown> | Placeholder<...>; amount: number | ... 1 more ... | Placeholder<...>; id?: number | ... 1 more ... | Placeholder<...>; }'.
  Overload 2 of 2, '(values: { userId: number | SQL<unknown> | Placeholder<string, any>; type: string | SQL<unknown> | Placeholder<string, any>; currencyId: number | SQL<unknown> | Placeholder<...>; amount: number | ... 1 more ... | Placeholder<...>; id?: number | ... 1 more ... | Placeholder<...>; }[]): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'userId' does not exist in type '{ userId: number | SQL<unknown> | Placeholder<string, any>; type: string | SQL<unknown> | Placeholder<string, any>; currencyId: number | SQL<unknown> | Placeholder<...>; amount: number | ... 1 more ... | Placeholder<...>; id?: number | ... 1 more ... | Placeholder<...>; }[]'.
server/services/staking.service.ts(258,8): error TS2769: No overload matches this call.
  Overload 1 of 2, '(value: { userId: number | SQL<unknown> | Placeholder<string, any>; type: string | SQL<unknown> | Placeholder<string, any>; currencyId: number | SQL<unknown> | Placeholder<...>; amount: number | ... 1 more ... | Placeholder<...>; id?: number | ... 1 more ... | Placeholder<...>; }): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'sourceId' does not exist in type '{ userId: number | SQL<unknown> | Placeholder<string, any>; type: string | SQL<unknown> | Placeholder<string, any>; currencyId: number | SQL<unknown> | Placeholder<...>; amount: number | ... 1 more ... | Placeholder<...>; id?: number | ... 1 more ... | Placeholder<...>; }'.
  Overload 2 of 2, '(values: { userId: number | SQL<unknown> | Placeholder<string, any>; type: string | SQL<unknown> | Placeholder<string, any>; currencyId: number | SQL<unknown> | Placeholder<...>; amount: number | ... 1 more ... | Placeholder<...>; id?: number | ... 1 more ... | Placeholder<...>; }[]): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'userId' does not exist in type '{ userId: number | SQL<unknown> | Placeholder<string, any>; type: string | SQL<unknown> | Placeholder<string, any>; currencyId: number | SQL<unknown> | Placeholder<...>; amount: number | ... 1 more ... | Placeholder<...>; id?: number | ... 1 more ... | Placeholder<...>; }[]'.
server/services/trading.service.mongo.ts(5,10): error TS2305: Module '"./price.service"' has no exported member 'fetchPriceFromExternalAPI'.
server/services/trading.service.mongo.ts(14,41): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = any>(filter: RootFilterQuery<any>, projection: ProjectionType<any>, options: QueryOptions<any> & { lean: true; }): Query<(FlattenMaps<...> & ... 1 more ... & { ...; })[] | (FlattenMaps<...> & ... 1 more ... & { ...; }), ... 4 more ..., {}>; <ResultDoc = any>(filter?: RootFilterQuery<...>, projection?:...' has signatures, but none of those signatures are compatible with each other.
server/services/trading.service.mongo.ts(31,42): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = any>(filter: RootFilterQuery<any>, projection: ProjectionType<any>, options: QueryOptions<any> & { lean: true; }): Query<(FlattenMaps<...> & Required<...> & { ...; })[], ... 4 more ..., {}>; <ResultDoc = any>(filter: RootFilterQuery<...>, projection?: ProjectionType<...>, options?: QueryOptions<...>):...' has signatures, but none of those signatures are compatible with each other.
server/services/trading.service.mongo.ts(35,41): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = any>(filter: RootFilterQuery<any>, projection: ProjectionType<any>, options: QueryOptions<any> & { lean: true; }): Query<(FlattenMaps<...> & Required<...> & { ...; })[], ... 4 more ..., {}>; <ResultDoc = any>(filter: RootFilterQuery<...>, projection?: ProjectionType<...>, options?: QueryOptions<...>):...' has signatures, but none of those signatures are compatible with each other.
server/services/trading.service.mongo.ts(104,45): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = any>(filter: RootFilterQuery<any>, projection: ProjectionType<any>, options: QueryOptions<any> & { lean: true; }): Query<(FlattenMaps<...> & ... 1 more ... & { ...; })[] | (FlattenMaps<...> & ... 1 more ... & { ...; }), ... 4 more ..., {}>; <ResultDoc = any>(filter?: RootFilterQuery<...>, projection?:...' has signatures, but none of those signatures are compatible with each other.
server/services/trading.service.mongo.ts(113,39): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = any>(id: any, projection: ProjectionType<any>, options: QueryOptions<any> & { lean: true; }): Query<(FlattenMaps<any> & Required<{ _id: unknown; }> & { ...; })[] | (FlattenMaps<...> & ... 1 more ... & { ...; }), ... 4 more ..., {}>; <ResultDoc = any>(id: any, projection?: ProjectionType<...>, options?...' has signatures, but none of those signatures are compatible with each other.
server/services/trading.service.mongo.ts(237,32): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = any>(filter: RootFilterQuery<any>, projection: ProjectionType<any>, options: QueryOptions<any> & { lean: true; }): Query<(FlattenMaps<...> & Required<...> & { ...; })[], ... 4 more ..., {}>; <ResultDoc = any>(filter: RootFilterQuery<...>, projection?: ProjectionType<...>, options?: QueryOptions<...>):...' has signatures, but none of those signatures are compatible with each other.
server/services/trading.service.mongo.ts(256,46): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = any>(filter: RootFilterQuery<any>, projection: ProjectionType<any>, options: QueryOptions<any> & { lean: true; }): Query<(FlattenMaps<...> & Required<...> & { ...; })[], ... 4 more ..., {}>; <ResultDoc = any>(filter: RootFilterQuery<...>, projection?: ProjectionType<...>, options?: QueryOptions<...>):...' has signatures, but none of those signatures are compatible with each other.
server/services/trading.service.mongo.ts(270,41): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = any>(filter: RootFilterQuery<any>, projection: ProjectionType<any>, options: QueryOptions<any> & { lean: true; }): Query<(FlattenMaps<...> & Required<...> & { ...; })[], ... 4 more ..., {}>; <ResultDoc = any>(filter: RootFilterQuery<...>, projection?: ProjectionType<...>, options?: QueryOptions<...>):...' has signatures, but none of those signatures are compatible with each other.
server/services/wallet.service.ts(44,7): error TS2353: Object literal may only specify known properties, and 'versions' does not exist in type 'TinySecp256k1Interface'.
server/services/wallet.service.ts(54,7): error TS2740: Type 'Uint8Array' is missing the following properties from type 'Buffer': write, toJSON, equals, compare, and 66 more.
server/services/wallet.service.ts(109,46): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = any>(filter: RootFilterQuery<any>, projection: ProjectionType<any>, options: QueryOptions<any> & { lean: true; }): Query<(FlattenMaps<...> & ... 1 more ... & { ...; })[] | (FlattenMaps<...> & ... 1 more ... & { ...; }), ... 4 more ..., {}>; <ResultDoc = any>(filter?: RootFilterQuery<...>, projection?:...' has signatures, but none of those signatures are compatible with each other.
server/services/wallet.service.ts(126,39): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = any>(filter: RootFilterQuery<any>, projection: ProjectionType<any>, options: QueryOptions<any> & { lean: true; }): Query<(FlattenMaps<...> & ... 1 more ... & { ...; })[] | (FlattenMaps<...> & ... 1 more ... & { ...; }), ... 4 more ..., {}>; <ResultDoc = any>(filter?: RootFilterQuery<...>, projection?:...' has signatures, but none of those signatures are compatible with each other.
server/services/wallet.service.ts(133,47): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = any>(filter: RootFilterQuery<any>, projection: ProjectionType<any>, options: QueryOptions<any> & { lean: true; }): Query<(FlattenMaps<...> & ... 1 more ... & { ...; })[] | (FlattenMaps<...> & ... 1 more ... & { ...; }), ... 4 more ..., {}>; <ResultDoc = any>(filter?: RootFilterQuery<...>, projection?:...' has signatures, but none of those signatures are compatible with each other.
server/services/wallet.service.ts(160,49): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = any>(filter: RootFilterQuery<any>, projection: ProjectionType<any>, options: QueryOptions<any> & { lean: true; }): Query<(FlattenMaps<...> & ... 1 more ... & { ...; })[] | (FlattenMaps<...> & ... 1 more ... & { ...; }), ... 4 more ..., {}>; <ResultDoc = any>(filter?: RootFilterQuery<...>, projection?:...' has signatures, but none of those signatures are compatible with each other.
server/services/wallet.service.ts(190,41): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = any>(filter: RootFilterQuery<any>, projection: ProjectionType<any>, options: QueryOptions<any> & { lean: true; }): Query<(FlattenMaps<...> & Required<...> & { ...; })[], ... 4 more ..., {}>; <ResultDoc = any>(filter: RootFilterQuery<...>, projection?: ProjectionType<...>, options?: QueryOptions<...>):...' has signatures, but none of those signatures are compatible with each other.
server/services/wallet.service.ts(215,40): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = any>(filter: RootFilterQuery<any>, projection: ProjectionType<any>, options: QueryOptions<any> & { lean: true; }): Query<(FlattenMaps<...> & Required<...> & { ...; })[], ... 4 more ..., {}>; <ResultDoc = any>(filter: RootFilterQuery<...>, projection?: ProjectionType<...>, options?: QueryOptions<...>):...' has signatures, but none of those signatures are compatible with each other.
server/services/wallet.service.ts(235,39): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = any>(filter: RootFilterQuery<any>, projection: ProjectionType<any>, options: QueryOptions<any> & { lean: true; }): Query<(FlattenMaps<...> & ... 1 more ... & { ...; })[] | (FlattenMaps<...> & ... 1 more ... & { ...; }), ... 4 more ..., {}>; <ResultDoc = any>(filter?: RootFilterQuery<...>, projection?:...' has signatures, but none of those signatures are compatible with each other.
server/services/wallet.service.ts(243,44): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = any>(filter: RootFilterQuery<any>, projection: ProjectionType<any>, options: QueryOptions<any> & { lean: true; }): Query<(FlattenMaps<...> & ... 1 more ... & { ...; })[] | (FlattenMaps<...> & ... 1 more ... & { ...; }), ... 4 more ..., {}>; <ResultDoc = any>(filter?: RootFilterQuery<...>, projection?:...' has signatures, but none of those signatures are compatible with each other.
server/services/wallet.service.ts(251,45): error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = any>(filter: RootFilterQuery<any>, projection: ProjectionType<any>, options: QueryOptions<any> & { lean: true; }): Query<(FlattenMaps<...> & ... 1 more ... & { ...; })[] | (FlattenMaps<...> & ... 1 more ... & { ...; }), ... 4 more ..., {}>; <ResultDoc = any>(filter?: RootFilterQuery<...>, projection?:...' has signatures, but none of those signatures are compatible with each other.
server/vite.ts(4,64): error TS2307: Cannot find module 'vite' or its corresponding type declarations.
shared/schema.ts(259,3): error TS2322: Type 'boolean' is not assignable to type 'never'.
shared/schema.ts(260,3): error TS2322: Type 'boolean' is not assignable to type 'never'.
shared/schema.ts(265,3): error TS2322: Type 'boolean' is not assignable to type 'never'.
shared/schema.ts(270,3): error TS2322: Type 'boolean' is not assignable to type 'never'.
shared/schema.ts(275,3): error TS2322: Type 'boolean' is not assignable to type 'never'.
shared/schema.ts(280,3): error TS2322: Type 'boolean' is not assignable to type 'never'.
shared/schema.ts(281,3): error TS2322: Type 'boolean' is not assignable to type 'never'.
shared/schema.ts(286,3): error TS2322: Type 'boolean' is not assignable to type 'never'.
shared/schema.ts(291,3): error TS2322: Type 'boolean' is not assignable to type 'never'.
shared/schema.ts(292,3): error TS2322: Type 'boolean' is not assignable to type 'never'.
shared/schema.ts(297,3): error TS2322: Type 'boolean' is not assignable to type 'never'.
shared/schema.ts(302,3): error TS2322: Type 'boolean' is not assignable to type 'never'.
shared/schema.ts(303,3): error TS2322: Type 'boolean' is not assignable to type 'never'.
shared/schema.ts(308,3): error TS2322: Type 'boolean' is not assignable to type 'never'.
shared/schema.ts(313,3): error TS2322: Type 'boolean' is not assignable to type 'never'.
shared/schema.ts(318,3): error TS2322: Type 'boolean' is not assignable to type 'never'.
vite.config.ts(1,30): error TS2307: Cannot find module 'vite' or its corresponding type declarations.
vite.config.ts(2,19): error TS2307: Cannot find module '@vitejs/plugin-react' or its corresponding type declarations.
vite.config.ts(5,33): error TS2307: Cannot find module '@replit/vite-plugin-runtime-error-modal' or its corresponding type declarations.
vite.config.ts(15,24): error TS2307: Cannot find module '@replit/vite-plugin-cartographer' or its corresponding type declarations.
npm error code 2
npm error path /opt/render/project/src/Nedaxer
npm error command failed
npm error command sh -c npm run check
npm error A complete log of this run can be found in: /opt/render/.cache/_logs/2025-07-02T20_10_08_850Z-debug-0.log
==> Build failed 😞