check this out- \Users\MANA\Documents\Dell\nedaxer-com>npm install

> rest-express@1.0.0 postinstall
> npm run check


> rest-express@1.0.0 check
> tsc

client/src/components/animated-error-banner.tsx:126:14 - error TS2322: Type '{ children: string; jsx: true; }' is not assignable to type 'DetailedHTMLProps<StyleHTMLAttributes<HTMLStyleElement>, HTMLStyleElement>'.
  Property 'jsx' does not exist on type 'DetailedHTMLProps<StyleHTMLAttributes<HTMLStyleElement>, HTMLStyleElement>'.

126       <style jsx>{`
                 ~~~

client/src/components/crypto-pair-selector.tsx:130:36 - error TS2345: Argument of type '{ method: string; body: { cryptoId: string; symbol: string; }; }' is not assignable to parameter of type 'string'.

130       apiRequest('/api/favorites', {
                                       ~
131         method: 'POST',
    ~~~~~~~~~~~~~~~~~~~~~~~
132         body: { cryptoId: crypto.id, symbol: crypto.symbol }
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
133       }),
    ~~~~~~~

client/src/components/crypto-pair-selector.tsx:141:36 - error TS2345: Argument of type '{ method: string; body: { cryptoId: string; symbol: string; }; }' is not assignable to parameter of type 'string'.

141       apiRequest('/api/favorites', {
                                       ~
142         method: 'DELETE',
    ~~~~~~~~~~~~~~~~~~~~~~~~~
143         body: { cryptoId: crypto.id, symbol: crypto.symbol }
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
144       }),
    ~~~~~~~

client/src/components/crypto-pair-selector.tsx:151:24 - error TS2339: Property 'data' does not exist on type 'unknown'.

151     if (userFavorites?.data) {
                           ~~~~

client/src/components/crypto-pair-selector.tsx:152:34 - error TS2339: Property 'data' does not exist on type 'unknown'.

152       setFavorites(userFavorites.data.map((fav: any) => fav.cryptoId));
                                     ~~~~

client/src/components/lightweight-chart.tsx:87:34 - error TS2345: Argument of type 'string' is not assignable to parameter of type 'SeriesDefinition<keyof SeriesOptionsMap>'.

87         series = chart.addSeries('Candlestick', {
                                    ~~~~~~~~~~~~~

client/src/components/lightweight-chart.tsx:96:34 - error TS2345: Argument of type 'string' is not assignable to parameter of type 'SeriesDefinition<keyof SeriesOptionsMap>'.

96         series = chart.addSeries('Line', {
                                    ~~~~~~

client/src/components/lightweight-chart.tsx:112:46 - error TS2345: Argument of type 'string' is not assignable to parameter of type 'SeriesDefinition<keyof SeriesOptionsMap>'.

112         const volumeSeries = chart.addSeries('Histogram', {
                                                 ~~~~~~~~~~~

client/src/components/protected-route.tsx:43:37 - error TS2339: Property 'env' does not exist on type 'ImportMeta'.

43   const isDevelopment = import.meta.env.DEV || process.env.NODE_ENV === 'development';
                                       ~~~

client/src/components/protected-route.tsx:75:17 - error TS2741: Property 'params' is missing in type '{}' but required in type 'RouteComponentProps<{ [param: string]: string; }>'.

75         return <Component {...(routeParams || {})} />;
                   ~~~~~~~~~

  node_modules/wouter/types/index.d.ts:65:3
    65   params: T;
         ~~~~~~
    'params' is declared here.

client/src/components/pull-to-refresh.tsx:13:25 - error TS2307: Cannot find module '@assets/Refresh  app logo_1750782062607.png' or its corresponding type declarations.

13 import refreshLogo from '@assets/Refresh  app logo_1750782062607.png';
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/pull-to-refresh.tsx:14:21 - error TS2307: Cannot find module '@assets/20250618_001640_1750782086856.png' or its corresponding type declarations.

14 import letterN from '@assets/20250618_001640_1750782086856.png';
                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/pull-to-refresh.tsx:15:22 - error TS2307: Cannot find module '@assets/20250618_001710_1750782086866.png' or its corresponding type declarations.

15 import letterE1 from '@assets/20250618_001710_1750782086866.png';
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/pull-to-refresh.tsx:16:21 - error TS2307: Cannot find module '@assets/20250618_001748_1750782086877.png' or its corresponding type declarations.

16 import letterD from '@assets/20250618_001748_1750782086877.png';
                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/pull-to-refresh.tsx:17:21 - error TS2307: Cannot find module '@assets/20250618_001828_1750782086889.png' or its corresponding type declarations.

17 import letterA from '@assets/20250618_001828_1750782086889.png';
                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/pull-to-refresh.tsx:18:21 - error TS2307: Cannot find module '@assets/20250618_001859_1750782086919.png' or its corresponding type declarations.

18 import letterX from '@assets/20250618_001859_1750782086919.png';
                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/pull-to-refresh.tsx:19:22 - error TS2307: Cannot find module '@assets/20250618_001938_1750782086928.png' or its corresponding type declarations.

19 import letterE2 from '@assets/20250618_001938_1750782086928.png';
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/pull-to-refresh.tsx:20:21 - error TS2307: Cannot find module '@assets/20250618_002006_1750782086936.png' or its corresponding type declarations.

20 import letterR from '@assets/20250618_002006_1750782086936.png';
                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/splash-screen.tsx:5:21 - error TS2307: Cannot find module '@assets/20250618_001640_1750207793691.png' or its corresponding type declarations.

5 import nLetter from '@assets/20250618_001640_1750207793691.png';
                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/splash-screen.tsx:6:22 - error TS2307: Cannot find module '@assets/20250618_001710_1750207793694.png' or its corresponding type declarations.

6 import eLetter1 from '@assets/20250618_001710_1750207793694.png';
                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/splash-screen.tsx:7:21 - error TS2307: Cannot find module '@assets/20250618_001748_1750207793698.png' or its corresponding type declarations.

7 import dLetter from '@assets/20250618_001748_1750207793698.png';
                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/splash-screen.tsx:8:21 - error TS2307: Cannot find module '@assets/20250618_001828_1750207793703.png' or its corresponding type declarations.

8 import aLetter from '@assets/20250618_001828_1750207793703.png';
                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/splash-screen.tsx:9:21 - error TS2307: Cannot find module '@assets/20250618_001859_1750207793716.png' or its corresponding type declarations.

9 import xLetter from '@assets/20250618_001859_1750207793716.png';
                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/splash-screen.tsx:10:22 - error TS2307: Cannot find module '@assets/20250618_001938_1750207793727.png' or its corresponding type declarations.

10 import eLetter2 from '@assets/20250618_001938_1750207793727.png';
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/splash-screen.tsx:11:21 - error TS2307: Cannot find module '@assets/20250618_002006_1750207793730.png' or its corresponding type declarations.

11 import rLetter from '@assets/20250618_002006_1750207793730.png';
                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/splash-screen.tsx:12:29 - error TS2307: Cannot find module '@assets/file_00000000e0d461f9b4be5c8627966318_1750209747614.png' or its corresponding type declarations.

12 import backgroundImage from '@assets/file_00000000e0d461f9b4be5c8627966318_1750209747614.png';
                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/splash-screen.tsx:13:25 - error TS2307: Cannot find module '@assets/20250618_042459_1750217238332.png' or its corresponding type declarations.

13 import nedaxerLogo from '@assets/20250618_042459_1750217238332.png';
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/lib/chart-state-manager.ts:155:5 - error TS2322: Type 'Window' is not assignable to type 'boolean'.

155     return globalWidget.isReady &&
        ~~~~~~

client/src/pages/account/login.tsx:263:43 - error TS2339: Property 'env' does not exist on type 'ImportMeta'.

263                 data-sitekey={import.meta.env.VITE_RECAPTCHA_SITE_KEY || "6LeX_XMrAAAAAOE1YUBRSnQb70l9FJra_s2Ohb8u"}
                                              ~~~

client/src/pages/account/register.tsx:437:45 - error TS2339: Property 'env' does not exist on type 'ImportMeta'.

437                   data-sitekey={import.meta.env.VITE_RECAPTCHA_SITE_KEY || "6LeX_XMrAAAAAOE1YUBRSnQb70l9FJra_s2Ohb8u"}
                                                ~~~

client/src/pages/company/careers.tsx:7:27 - error TS2307: Cannot find module '/team_photos/team_main.png' or its corresponding type declarations.

7 import teamMainPhoto from "/team_photos/team_main.png";
                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/pages/company/careers.tsx:8:24 - error TS2307: Cannot find module '/team_photos/team_1.png' or its corresponding type declarations.

8 import teamPhoto1 from "/team_photos/team_1.png";
                         ~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/pages/company/careers.tsx:9:24 - error TS2307: Cannot find module '/team_photos/team_2.png' or its corresponding type declarations.

9 import teamPhoto2 from "/team_photos/team_2.png";
                         ~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/pages/company/careers.tsx:10:24 - error TS2307: Cannot find module '/team_photos/team_3.png' or its corresponding type declarations.

10 import teamPhoto3 from "/team_photos/team_3.png";
                          ~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/pages/company/careers.tsx:11:24 - error TS2307: Cannot find module '/team_photos/team_4.png' or its corresponding type declarations.

11 import teamPhoto4 from "/team_photos/team_4.png";
                          ~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/pages/company/careers.tsx:12:24 - error TS2307: Cannot find module '/team_photos/team_5.png' or its corresponding type declarations.

12 import teamPhoto5 from "/team_photos/team_5.png";
                          ~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/pages/company/careers.tsx:13:24 - error TS2307: Cannot find module '/team_photos/team_6.png' or its corresponding type declarations.

13 import teamPhoto6 from "/team_photos/team_6.png";
                          ~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/pages/mobile/assets.tsx:34:33 - error TS2307: Cannot find module '@/assets/advanced-charts-video.mp4' or its corresponding type declarations.

34 import advancedChartsVideo from '@/assets/advanced-charts-video.mp4';
                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/pages/mobile/deposit-details.tsx:42:11 - error TS2339: Property 'transactionId' does not exist on type 'StringRouteParams<undefined>'.

42   const { transactionId } = useParams();
             ~~~~~~~~~~~~~

client/src/pages/mobile/home.tsx:353:20 - error TS2554: Expected 2-3 arguments, but got 1.

353     queryFn: () => apiRequest('/api/notifications/unread-count'),
                       ~~~~~~~~~~

  client/src/lib/queryClient.ts:12:3
    12   url: string,
         ~~~~~~~~~~~
    An argument for 'url' was not provided.

client/src/pages/mobile/home.tsx:524:24 - error TS2339: Property 'data' does not exist on type 'unknown'.

524     return walletData?.data?.usdBalance || 0;
                           ~~~~

client/src/pages/mobile/home.tsx:737:21 - error TS2339: Property 'data' does not exist on type 'unknown'.

737           kycStatus.data?.kycStatus === 'none' || kycStatus.data?.kycStatus === 'rejected'
                        ~~~~

client/src/pages/mobile/home.tsx:737:61 - error TS2339: Property 'data' does not exist on type 'unknown'.

737           kycStatus.data?.kycStatus === 'none' || kycStatus.data?.kycStatus === 'rejected'
                                                                ~~~~

client/src/pages/mobile/home.tsx:742:44 - error TS2339: Property 'data' does not exist on type 'unknown'.

742             questionsCompleted={kycStatus?.data?.kycData?.sourceOfIncome ? true : false}
                                               ~~~~

client/src/pages/mobile/home.tsx:743:35 - error TS2339: Property 'data' does not exist on type 'unknown'.

743             kycStatus={kycStatus?.data?.kycStatus || 'none'}
                                      ~~~~

client/src/pages/mobile/home.tsx:787:35 - error TS2339: Property 'unreadCount' does not exist on type 'unknown'.

787               {notificationCount?.unreadCount > 0 && (
                                      ~~~~~~~~~~~

client/src/pages/mobile/home.tsx:790:40 - error TS2339: Property 'unreadCount' does not exist on type 'unknown'.

790                     {notificationCount.unreadCount > 9 ? '9+' : notificationCount.unreadCount}
                                           ~~~~~~~~~~~

client/src/pages/mobile/home.tsx:790:83 - error TS2339: Property 'unreadCount' does not exist on type 'unknown'.

790                     {notificationCount.unreadCount > 9 ? '9+' : notificationCount.unreadCount}
                                                                                      ~~~~~~~~~~~

client/src/pages/mobile/kyc-status.tsx:37:30 - error TS2339: Property 'data' does not exist on type 'unknown'.

37   const kycData = kycStatus?.data;
                                ~~~~

client/src/pages/mobile/news.tsx:244:50 - error TS2304: Cannot find name 'getSourceIcon'.

244                               parent.innerHTML = getSourceIcon(article.source?.name || 'Crypto News');
                                                     ~~~~~~~~~~~~~

client/src/pages/mobile/security.tsx:69:20 - error TS2554: Expected 2-3 arguments, but got 1.

69     queryFn: () => apiRequest('/api/user/security/settings'),
                      ~~~~~~~~~~

  client/src/lib/queryClient.ts:12:3
    12   url: string,
         ~~~~~~~~~~~
    An argument for 'url' was not provided.

client/src/pages/mobile/security.tsx:77:20 - error TS2554: Expected 2-3 arguments, but got 1.

77     queryFn: () => apiRequest('/api/user/security/login-history'),
                      ~~~~~~~~~~

  client/src/lib/queryClient.ts:12:3
    12   url: string,
         ~~~~~~~~~~~
    An argument for 'url' was not provided.

client/src/pages/mobile/security.tsx:266:23 - error TS2339: Property 'data' does not exist on type 'Response'.

266     if (securityData?.data) {
                          ~~~~

client/src/pages/mobile/security.tsx:269:25 - error TS2339: Property 'data' does not exist on type 'Response'.

269         ...securityData.data
                            ~~~~

client/src/pages/mobile/security.tsx:665:30 - error TS2339: Property 'data' does not exist on type 'Response'.

665               {loginHistory?.data?.slice(0, 5).map((login: LoginAttempt) => (
                                 ~~~~

client/src/pages/mobile/settings.tsx:53:20 - error TS2554: Expected 2-3 arguments, but got 1.

53     queryFn: () => apiRequest('/api/user/security/settings'),
                      ~~~~~~~~~~

  client/src/lib/queryClient.ts:12:3
    12   url: string,
         ~~~~~~~~~~~
    An argument for 'url' was not provided.

client/src/pages/mobile/settings.tsx:61:20 - error TS2554: Expected 2-3 arguments, but got 1.

61     queryFn: () => apiRequest('/api/verification/status'),
                      ~~~~~~~~~~

  client/src/lib/queryClient.ts:12:3
    12   url: string,
         ~~~~~~~~~~~
    An argument for 'url' was not provided.

client/src/pages/mobile/settings.tsx:68:24 - error TS2339: Property 'data' does not exist on type 'Response'.

68     if (!securityData?.data) return 0;
                          ~~~~

client/src/pages/mobile/settings.tsx:69:35 - error TS2339: Property 'data' does not exist on type 'Response'.

69     const settings = securityData.data;
                                     ~~~~

client/src/pages/mobile/settings.tsx:388:28 - error TS2339: Property 'data' does not exist on type 'Response'.

388                   kycData?.data?.kycStatus === 'verified'
                               ~~~~

client/src/pages/mobile/settings.tsx:390:32 - error TS2339: Property 'data' does not exist on type 'Response'.

390                     : kycData?.data?.kycStatus === 'pending'
                                   ~~~~

client/src/pages/mobile/settings.tsx:394:29 - error TS2339: Property 'data' does not exist on type 'Response'.

394                   {kycData?.data?.kycStatus === 'verified'
                                ~~~~

client/src/pages/mobile/settings.tsx:396:32 - error TS2339: Property 'data' does not exist on type 'Response'.

396                     : kycData?.data?.kycStatus === 'pending'
                                   ~~~~

client/src/pages/mobile/trade.tsx:212:61 - error TS2448: Block-scoped variable 'currentSymbol' used before its declaration.

212         const currentSymbol = activeWidget.currentSymbol || currentSymbol;
                                                                ~~~~~~~~~~~~~

  client/src/pages/mobile/trade.tsx:212:15
    212         const currentSymbol = activeWidget.currentSymbol || currentSymbol;
                      ~~~~~~~~~~~~~
    'currentSymbol' is declared here.

client/src/pages/mobile/transfer-details.tsx:11:11 - error TS2339: Property 'transactionId' does not exist on type 'StringRouteParams<undefined>'.

11   const { transactionId } = useParams();
             ~~~~~~~~~~~~~

client/src/pages/mobile/verification-submitted.tsx:36:30 - error TS2339: Property 'data' does not exist on type 'unknown'.

36   const kycData = kycStatus?.data?.kycData;
                                ~~~~

client/src/pages/mobile/verification/VerificationStart.tsx:7:31 - error TS2307: Cannot find module '@assets/Picsart_25-06-28_15-49-20-738 (1)_1751125238732.png' or its corresponding type declarations.

7 import professionalImage from '@assets/Picsart_25-06-28_15-49-20-738 (1)_1751125238732.png';
                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/pages/mobile/withdrawal-details.tsx:42:11 - error TS2339: Property 'transactionId' does not exist on type 'StringRouteParams<undefined>'.

42   const { transactionId } = useParams();
             ~~~~~~~~~~~~~

client/src/pages/mobile/withdrawal-details.tsx:52:44 - error TS2339: Property 'data' does not exist on type 'unknown'.

52   const transaction = transactionResponse?.data;
                                              ~~~~

client/src/pages/platform/staking.tsx:162:46 - error TS2345: Argument of type '{ method: string; body: { currencyId: number; amount: number; lockupDays: number; }; }' is not assignable to parameter of type 'string'.

162       await apiRequest('/api/staking/stake', {
                                                 ~
163         method: 'POST',
    ~~~~~~~~~~~~~~~~~~~~~~~
...
168         }
    ~~~~~~~~~
169       });
    ~~~~~~~

client/src/pages/platform/staking.tsx:180:62 - error TS2345: Argument of type '{ method: string; }' is not assignable to parameter of type 'string'.

180       await apiRequest(`/api/staking/unstake/${positionId}`, {
                                                                 ~
181         method: 'POST'
    ~~~~~~~~~~~~~~~~~~~~~~
182       });
    ~~~~~~~

client/src/pages/platform/trading.tsx:51:33 - error TS2339: Property 'find' does not exist on type 'unknown'.

51   const currentPrice = markets?.find((m: any) => m.symbol === selectedPair.split('/')[0])?.price || 43250;
                                   ~~~~

client/src/pages/platform/wallet.tsx:161:48 - error TS2345: Argument of type '{ method: string; body: { currencyId: number; amount: number; address: string; }; }' is not assignable to parameter of type 'string'.

161       await apiRequest('/api/wallet/withdraw', {
                                                   ~
162         method: 'POST',
    ~~~~~~~~~~~~~~~~~~~~~~~
...
167         }
    ~~~~~~~~~
168       });
    ~~~~~~~

server/api/admin-kyc-routes.ts:17:47 - error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: Request<{}, any, any, ParsedQs, Record<string, any>>, res: Response<any, Record<string, any>, number>) => Promise<Response<any, Record<...>, number>>' is not assignable to parameter of type 'RequestHandlerParams<{}, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: Request<{}, any, any, ParsedQs, Record<string, any>>, res: Response<any, Record<string, any>, number>) => Promise<Response<any, Record<...>, number>>' is not assignable to type 'RequestHandler<{}, any, any, ParsedQs, Record<string, any>>'.
        Type 'Promise<Response<any, Record<string, any>, number>>' is not assignable to type 'void | Promise<void>'.
          Type 'Promise<Response<any, Record<string, any>, number>>' is not assignable to type 'Promise<void>'.
            Type 'Response<any, Record<string, any>, number>' is not assignable to type 'void'.

17 router.post('/approve-kyc', requireAdminAuth, async (req, res) => {
                                                 ~~~~~~~~~~~~~~~~~~~~~

  node_modules/@types/express-serve-static-core/index.d.ts:157:5
    157     <
            ~
    158         P = ParamsDictionary,
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ...
    166         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    167     ): T;
        ~~~~~~~~~
    The last overload is declared here.

server/api/admin-kyc-routes.ts:40:29 - error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(id: any, projection: ProjectionType<IUser>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(id: any, projection?: ProjectionType<...>, options?: QueryOp...' has signatures, but none of those signatures are compatible with each other.

40     const user = await User.findById(userId);
                               ~~~~~~~~

server/api/admin-kyc-routes.ts:122:45 - error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(filter: RootFilterQuery<IUser>, projection: ProjectionType<...>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(filter: RootFilterQuery<...>, projectio...' has signatures, but none of those signatures are compatible with each other.

122     const pendingVerifications = await User.find({
                                                ~~~~

server/api/admin-kyc-routes.ts:144:54 - error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: Request<{}, any, any, ParsedQs, Record<string, any>>, res: Response<any, Record<string, any>, number>) => Promise<Response<any, Record<...>, number>>' is not assignable to parameter of type 'RequestHandlerParams<{}, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: Request<{}, any, any, ParsedQs, Record<string, any>>, res: Response<any, Record<string, any>, number>) => Promise<Response<any, Record<...>, number>>' is not assignable to type 'RequestHandler<{}, any, any, ParsedQs, Record<string, any>>'.
        Type 'Promise<Response<any, Record<string, any>, number>>' is not assignable to type 'void | Promise<void>'.
          Type 'Promise<Response<any, Record<string, any>, number>>' is not assignable to type 'Promise<void>'.
            Type 'Response<any, Record<string, any>, number>' is not assignable to type 'void'.

144 router.post('/add-test-documents', requireAdminAuth, async (req, res) => {
                                                         ~~~~~~~~~~~~~~~~~~~~~

  node_modules/@types/express-serve-static-core/index.d.ts:157:5
    157     <
            ~
    158         P = ParamsDictionary,
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ...
    166         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    167     ): T;
        ~~~~~~~~~
    The last overload is declared here.

server/api/admin-kyc-routes.ts:152:29 - error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(filter: RootFilterQuery<IUser>, projection: ProjectionType<...>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(filter?: RootFilterQuery<...>, projecti...' has signatures, but none of those signatures are compatible with each other.

152     const user = await User.findOne({ kycStatus: 'pending' });
                                ~~~~~~~

server/api/admin-panel-routes.ts:18:54 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>, right: number | SQLWrapper): SQL<...>', gave the following error.
    Argument of type 'string' is not assignable to parameter of type 'number | SQLWrapper'.
  Overload 2 of 3, '(left: Aliased<string>, right: string | SQLWrapper): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<string>'.
      Type 'PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<string>': sql, fieldAlias
  Overload 3 of 3, '(left: never, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'never'.

18   const [user] = await db.select().from(users).where(eq(users.id, req.session.userId));
                                                        ~~


server/api/admin-panel-routes.ts:31:22 - error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: Request, res: Response, next: NextFunction) => Promise<Response<any, Record<string, any>>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: Request, res: Response, next: NextFunction) => Promise<Response<any, Record<string, any>>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Type 'Promise<Response<any, Record<string, any>>>' is not assignable to type 'void | Promise<void>'.
          Type 'Promise<Response<any, Record<string, any>>>' is not assignable to type 'Promise<void>'.
            Type 'Response<any, Record<string, any>>' is not assignable to type 'void'.

31 router.get("/stats", requireAdmin, async (req: Request, res: Response) => {
                        ~~~~~~~~~~~~

  node_modules/@types/express-serve-static-core/index.d.ts:157:5
    157     <
            ~
    158         P = ParamsDictionary,
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ...
    166         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    167     ): T;
        ~~~~~~~~~
    The last overload is declared here.

server/api/admin-panel-routes.ts:48:24 - error TS2362: The left-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type.

48         platformValue: (totalBalance.total || 0) * 1.05 // Sample calculation
                          ~~~~~~~~~~~~~~~~~~~~~~~~~

server/api/admin-panel-routes.ts:61:22 - error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: Request, res: Response, next: NextFunction) => Promise<Response<any, Record<string, any>>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: Request, res: Response, next: NextFunction) => Promise<Response<any, Record<string, any>>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Type 'Promise<Response<any, Record<string, any>>>' is not assignable to type 'void | Promise<void>'.
          Type 'Promise<Response<any, Record<string, any>>>' is not assignable to type 'Promise<void>'.
            Type 'Response<any, Record<string, any>>' is not assignable to type 'void'.

61 router.get("/users", requireAdmin, async (req: Request, res: Response) => {
                        ~~~~~~~~~~~~

  node_modules/@types/express-serve-static-core/index.d.ts:157:5
    157     <
            ~
    158         P = ParamsDictionary,
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ...
    166         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    167     ): T;
        ~~~~~~~~~
    The last overload is declared here.

server/api/admin-panel-routes.ts:89:32 - error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: Request, res: Response, next: NextFunction) => Promise<Response<any, Record<string, any>>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: Request, res: Response, next: NextFunction) => Promise<Response<any, Record<string, any>>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Type 'Promise<Response<any, Record<string, any>>>' is not assignable to type 'void | Promise<void>'.
          Type 'Promise<Response<any, Record<string, any>>>' is not assignable to type 'Promise<void>'.
            Type 'Response<any, Record<string, any>>' is not assignable to type 'void'.

89 router.post("/credit-balance", requireAdmin, async (req: Request, res: Response) => {
                                  ~~~~~~~~~~~~

  node_modules/@types/express-serve-static-core/index.d.ts:157:5
    157     <
            ~
    158         P = ParamsDictionary,
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ...
    166         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    167     ): T;
        ~~~~~~~~~
    The last overload is declared here.

server/api/admin-panel-routes.ts:137:8 - error TS2339: Property 'where' does not exist on type 'Omit<PgSelectBase<"user_balances", { id: PgColumn<{ name: "id"; tableName: "user_balances"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; ... 6 more ...; generated: undefined; }, {}, {}>; userId: PgColumn<...>; currencyId: PgColumn<...>; bal...'.

137       .where(eq(userBalances.currencyId, currency.id));
           ~~~~~

server/api/admin-panel-routes.ts:158:21 - error TS2304: Cannot find name 'adminCredits'.

158     await db.insert(adminCredits).values({
                        ~~~~~~~~~~~~

server/api/admin-panel-routes.ts:168:35 - error TS2769: No overload matches this call.
  Overload 1 of 2, '(value: { userId: number | SQL<unknown> | Placeholder<string, any>; type: string | SQL<unknown> | Placeholder<string, any>; currencyId: number | SQL<unknown> | Placeholder<...>; ... 8 more ...; toAddress?: string | ... 1 more ... | Placeholder<...>; }): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'sourceId' does not exist in type '{ userId: number | SQL<unknown> | Placeholder<string, any>; type: string | SQL<unknown> | Placeholder<string, any>; currencyId: number | SQL<unknown> | Placeholder<...>; ... 8 more ...; toAddress?: string | ... 1 more ... | Placeholder<...>; }'.
  Overload 2 of 2, '(values: { userId: number | SQL<unknown> | Placeholder<string, any>; type: string | SQL<unknown> | Placeholder<string, any>; currencyId: number | SQL<unknown> | Placeholder<...>; ... 8 more ...; toAddress?: string | ... 1 more ... | Placeholder<...>; }[]): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'userId' does not exist in type '{ userId: number | SQL<unknown> | Placeholder<string, any>; type: string | SQL<unknown> | Placeholder<string, any>; currencyId: number | SQL<unknown> | Placeholder<...>; ... 8 more ...; toAddress?: string | ... 1 more ... | Placeholder<...>; }[]'.

168     await db.insert(transactions).values({
                                      ~~~~~~


server/api/admin-panel-routes.ts:197:31 - error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: Request, res: Response, next: NextFunction) => Promise<Response<any, Record<string, any>>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: Request, res: Response, next: NextFunction) => Promise<Response<any, Record<string, any>>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Type 'Promise<Response<any, Record<string, any>>>' is not assignable to type 'void | Promise<void>'.
          Type 'Promise<Response<any, Record<string, any>>>' is not assignable to type 'Promise<void>'.
            Type 'Response<any, Record<string, any>>' is not assignable to type 'void'.

197 router.post("/staking-rates", requireAdmin, async (req: Request, res: Response) => {
                                  ~~~~~~~~~~~~

  node_modules/@types/express-serve-static-core/index.d.ts:157:5
    157     <
            ~
    158         P = ParamsDictionary,
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ...
    166         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    167     ): T;
        ~~~~~~~~~
    The last overload is declared here.

server/api/admin-panel-routes.ts:237:11 - error TS2353: Object literal may only specify known properties, and 'rate' does not exist in type '{ currencyId?: number | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}>; apy?: number | SQL<unknown> | PgColumn<...>; ... 4 more ...; lockPeriod?: number | ... 1 more ... | PgColumn<...>; }'.

237           rate,
              ~~~~

server/api/admin-panel-routes.ts:244:37 - error TS2769: No overload matches this call.
  Overload 1 of 2, '(value: { currencyId: number | SQL<unknown> | Placeholder<string, any>; apy: number | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<...>; createdAt?: Date | ... 1 more ... | Placeholder<...>; minAmount?: number | ... 1 more ... | Placeholder<...>; maxAmount?: number | ... 1 more ... | Placeholder<...>; lockPeriod?: number | ... 1 more ... | Placeholder<...>; }): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'rate' does not exist in type '{ currencyId: number | SQL<unknown> | Placeholder<string, any>; apy: number | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<string, any>; createdAt?: Date | ... 1 more ... | Placeholder<...>; minAmount?: number | ... 1 more ... | Placeholder<...>; maxAmount?: number | ... 1 more ....'.
  Overload 2 of 2, '(values: { currencyId: number | SQL<unknown> | Placeholder<string, any>; apy: number | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<...>; createdAt?: Date | ... 1 more ... | Placeholder<...>; minAmount?: number | ... 1 more ... | Placeholder<...>; maxAmount?: number | ... 1 more ... | Placeholder<...>; lockPeriod?: number | ... 1 more ... | Placeholder<...>; }[]): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'currencyId' does not exist in type '{ currencyId: number | SQL<unknown> | Placeholder<string, any>; apy: number | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<string, any>; createdAt?: Date | ... 1 more ... | Placeholder<...>; minAmount?: number | ... 1 more ... | Placeholder<...>; maxAmount?: number | ... 1 more ....'.

244       await db.insert(stakingRates).values({
                                        ~~~~~~


server/api/admin-panel-routes.ts:268:36 - error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: Request, res: Response, next: NextFunction) => Promise<Response<any, Record<string, any>>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: Request, res: Response, next: NextFunction) => Promise<Response<any, Record<string, any>>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Type 'Promise<Response<any, Record<string, any>>>' is not assignable to type 'void | Promise<void>'.
          Type 'Promise<Response<any, Record<string, any>>>' is not assignable to type 'Promise<void>'.
            Type 'Response<any, Record<string, any>>' is not assignable to type 'void'.

268 router.get("/recent-transactions", requireAdmin, async (req: Request, res: Response) => {
                                       ~~~~~~~~~~~~

  node_modules/@types/express-serve-static-core/index.d.ts:157:5
    157     <
            ~
    158         P = ParamsDictionary,
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ...
    166         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    167     ): T;
        ~~~~~~~~~
    The last overload is declared here.

server/api/admin-panel-routes.ts:274:34 - error TS2339: Property 'sourceAmount' does not exist on type 'PgTableWithColumns<{ name: "transactions"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "transactions"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; ... 8 more ...; generated: undefined; }, {}, {}>; ... 10 more ...; updatedAt: PgColumn<...>; }; diale...'.

274       sourceAmount: transactions.sourceAmount,
                                     ~~~~~~~~~~~~

server/api/admin-panel-routes.ts:275:34 - error TS2339: Property 'targetAmount' does not exist on type 'PgTableWithColumns<{ name: "transactions"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "transactions"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; ... 8 more ...; generated: undefined; }, {}, {}>; ... 10 more ...; updatedAt: PgColumn<...>; }; diale...'.

275       targetAmount: transactions.targetAmount,
                                     ~~~~~~~~~~~~

server/api/admin-routes.ts:20:29 - error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(id: any, projection: ProjectionType<IUser>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(id: any, projection?: ProjectionType<...>, options?: QueryOp...' has signatures, but none of those signatures are compatible with each other.

20     const user = await User.findById(req.session.userId);
                               ~~~~~~~~

server/api/admin-routes.ts:41:22 - error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: Request, res: Response, next: NextFunction) => Promise<Response<any, Record<string, any>>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: Request, res: Response, next: NextFunction) => Promise<Response<any, Record<string, any>>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Type 'Promise<Response<any, Record<string, any>>>' is not assignable to type 'void | Promise<void>'.
          Type 'Promise<Response<any, Record<string, any>>>' is not assignable to type 'Promise<void>'.
            Type 'Response<any, Record<string, any>>' is not assignable to type 'void'.

41 router.get("/stats", requireAdmin, async (req: Request, res: Response) => {
                        ~~~~~~~~~~~~

  node_modules/@types/express-serve-static-core/index.d.ts:157:5
    157     <
            ~
    158         P = ParamsDictionary,
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ...
    166         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    167     ): T;
        ~~~~~~~~~
    The last overload is declared here.

server/api/admin-routes.ts:74:22 - error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: Request, res: Response, next: NextFunction) => Promise<Response<any, Record<string, any>>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: Request, res: Response, next: NextFunction) => Promise<Response<any, Record<string, any>>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Type 'Promise<Response<any, Record<string, any>>>' is not assignable to type 'void | Promise<void>'.
          Type 'Promise<Response<any, Record<string, any>>>' is not assignable to type 'Promise<void>'.
            Type 'Response<any, Record<string, any>>' is not assignable to type 'void'.

74 router.get("/users", requireAdmin, async (req: Request, res: Response) => {
                        ~~~~~~~~~~~~

  node_modules/@types/express-serve-static-core/index.d.ts:157:5
    157     <
            ~
    158         P = ParamsDictionary,
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ...
    166         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    167     ): T;
        ~~~~~~~~~
    The last overload is declared here.

server/api/admin-routes.ts:92:33 - error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(filter: RootFilterQuery<IUser>, projection: ProjectionType<...>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(filter: RootFilterQuery<...>, projectio...' has signatures, but none of those signatures are compatible with each other.

92     const allUsers = await User.find(query).sort({ createdAt: -1 });
                                   ~~~~

server/api/admin-routes.ts:102:36 - error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: Request, res: Response, next: NextFunction) => Promise<Response<any, Record<string, any>>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: Request, res: Response, next: NextFunction) => Promise<Response<any, Record<string, any>>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Type 'Promise<Response<any, Record<string, any>>>' is not assignable to type 'void | Promise<void>'.
          Type 'Promise<Response<any, Record<string, any>>>' is not assignable to type 'Promise<void>'.
            Type 'Response<any, Record<string, any>>' is not assignable to type 'void'.

102 router.get("/recent-transactions", requireAdmin, async (req: Request, res: Response) => {
                                       ~~~~~~~~~~~~

  node_modules/@types/express-serve-static-core/index.d.ts:157:5
    157     <
            ~
    158         P = ParamsDictionary,
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ...
    166         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    167     ): T;
        ~~~~~~~~~
    The last overload is declared here.

server/api/admin-routes.ts:105:50 - error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = any>(filter: RootFilterQuery<any>, projection: ProjectionType<any>, options: QueryOptions<any> & { lean: true; }): Query<(FlattenMaps<...> & Required<...> & { ...; })[], ... 4 more ..., {}>; <ResultDoc = any>(filter: RootFilterQuery<...>, projection?: ProjectionType<...>, options?: QueryOptions<...>):...' has signatures, but none of those signatures are compatible with each other.

105     const recentTransactions = await Transaction.find()
                                                     ~~~~

server/api/admin-routes.ts:114:39 - error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = any>(filter: RootFilterQuery<any>, projection: ProjectionType<any>, options: QueryOptions<any> & { lean: true; }): Query<(FlattenMaps<...> & Required<...> & { ...; })[], ... 4 more ..., {}>; <ResultDoc = any>(filter: RootFilterQuery<...>, projection?: ProjectionType<...>, options?: QueryOptions<...>):...' has signatures, but none of those signatures are compatible with each other.

114     const currencies = await Currency.find({}, { symbol: 1, _id: 1 });
                                          ~~~~

server/api/admin-routes.ts:146:32 - error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: Request, res: Response, next: NextFunction) => Promise<Response<any, Record<string, any>>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: Request, res: Response, next: NextFunction) => Promise<Response<any, Record<string, any>>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Type 'Promise<Response<any, Record<string, any>>>' is not assignable to type 'void | Promise<void>'.
          Type 'Promise<Response<any, Record<string, any>>>' is not assignable to type 'Promise<void>'.
            Type 'Response<any, Record<string, any>>' is not assignable to type 'void'.

146 router.post("/credit-balance", requireAdmin, async (req: Request, res: Response) => {
                                   ~~~~~~~~~~~~

  node_modules/@types/express-serve-static-core/index.d.ts:157:5
    157     <
            ~
    158         P = ParamsDictionary,
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ...
    166         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    167     ): T;
        ~~~~~~~~~
    The last overload is declared here.

server/api/admin-routes.ts:158:35 - error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(id: any, projection: ProjectionType<IUser>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(id: any, projection?: ProjectionType<...>, options?: QueryOp...' has signatures, but none of those signatures are compatible with each other.

158     const userExists = await User.findById(userId);
                                      ~~~~~~~~

server/api/admin-routes.ts:168:43 - error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = any>(id: any, projection: ProjectionType<any>, options: QueryOptions<any> & { lean: true; }): Query<(FlattenMaps<any> & Required<{ _id: unknown; }> & { ...; })[] | (FlattenMaps<...> & ... 1 more ... & { ...; }), ... 4 more ..., {}>; <ResultDoc = any>(id: any, projection?: ProjectionType<...>, options?...' has signatures, but none of those signatures are compatible with each other.

168     const currencyExists = await Currency.findById(currencyId);
                                              ~~~~~~~~

server/api/admin-routes.ts:178:47 - error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = any>(filter: RootFilterQuery<any>, projection: ProjectionType<any>, options: QueryOptions<any> & { lean: true; }): Query<(FlattenMaps<...> & ... 1 more ... & { ...; })[] | (FlattenMaps<...> & ... 1 more ... & { ...; }), ... 4 more ..., {}>; <ResultDoc = any>(filter?: RootFilterQuery<...>, projection?:...' has signatures, but none of those signatures are compatible with each other.

178     const existingBalance = await UserBalance.findOne({
                                                  ~~~~~~~

server/api/admin-routes.ts:190:25 - error TS2349: This expression is not callable.
  Each member of the union type '{ <DocContents = AnyKeys<any>>(docs: any[], options: CreateOptions & { aggregateErrors: true; }): Promise<any[]>; <DocContents = AnyKeys<any>>(docs: any[], options?: CreateOptions): Promise<...>; <DocContents = AnyKeys<...>>(doc: any): Promise<...>; <DocContents = AnyKeys<...>>(...docs: any[]): Promise<...>; } | { ....' has signatures, but none of those signatures are compatible with each other.

190       await UserBalance.create({
                            ~~~~~~

server/api/admin-routes.ts:200:23 - error TS2349: This expression is not callable.
  Each member of the union type '{ <DocContents = AnyKeys<any>>(docs: any[], options: CreateOptions & { aggregateErrors: true; }): Promise<any[]>; <DocContents = AnyKeys<any>>(docs: any[], options?: CreateOptions): Promise<...>; <DocContents = AnyKeys<...>>(doc: any): Promise<...>; <DocContents = AnyKeys<...>>(...docs: any[]): Promise<...>; } | { ....' has signatures, but none of those signatures are compatible with each other.

200     await Transaction.create({
                          ~~~~~~

server/api/admin-routes.ts:225:31 - error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: Request, res: Response, next: NextFunction) => Promise<Response<any, Record<string, any>>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: Request, res: Response, next: NextFunction) => Promise<Response<any, Record<string, any>>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Type 'Promise<Response<any, Record<string, any>>>' is not assignable to type 'void | Promise<void>'.
          Type 'Promise<Response<any, Record<string, any>>>' is not assignable to type 'Promise<void>'.
            Type 'Response<any, Record<string, any>>' is not assignable to type 'void'.

225 router.post("/staking-rates", requireAdmin, async (req: Request, res: Response) => {
                                  ~~~~~~~~~~~~

  node_modules/@types/express-serve-static-core/index.d.ts:157:5
    157     <
            ~
    158         P = ParamsDictionary,
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ...
    166         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    167     ): T;
        ~~~~~~~~~
    The last overload is declared here.

server/api/admin-routes.ts:251:44 - error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = any>(filter: RootFilterQuery<any>, projection: ProjectionType<any>, options: QueryOptions<any> & { lean: true; }): Query<(FlattenMaps<...> & ... 1 more ... & { ...; })[] | (FlattenMaps<...> & ... 1 more ... & { ...; }), ... 4 more ..., {}>; <ResultDoc = any>(filter?: RootFilterQuery<...>, projection?:...' has signatures, but none of those signatures are compatible with each other.

251     const existingRate = await StakingRate.findOne({ currencyId });
                                               ~~~~~~~

server/api/admin-routes.ts:267:25 - error TS2349: This expression is not callable.
  Each member of the union type '{ <DocContents = AnyKeys<any>>(docs: any[], options: CreateOptions & { aggregateErrors: true; }): Promise<any[]>; <DocContents = AnyKeys<any>>(docs: any[], options?: CreateOptions): Promise<...>; <DocContents = AnyKeys<...>>(doc: any): Promise<...>; <DocContents = AnyKeys<...>>(...docs: any[]): Promise<...>; } | { ....' has signatures, but none of those signatures are compatible with each other.

267       await StakingRate.create({
                            ~~~~~~

server/api/admin-routes.ts:291:38 - error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: Request, res: Response, next: NextFunction) => Promise<Response<any, Record<string, any>>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: Request, res: Response, next: NextFunction) => Promise<Response<any, Record<string, any>>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Type 'Promise<Response<any, Record<string, any>>>' is not assignable to type 'void | Promise<void>'.
          Type 'Promise<Response<any, Record<string, any>>>' is not assignable to type 'Promise<void>'.
            Type 'Response<any, Record<string, any>>' is not assignable to type 'void'.

291 router.post("/users/:userId/verify", requireAdmin, async (req: Request, res: Response) => {
                                         ~~~~~~~~~~~~

  node_modules/@types/express-serve-static-core/index.d.ts:157:5
    157     <
            ~
    158         P = ParamsDictionary,
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ...
    166         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    167     ): T;
        ~~~~~~~~~
    The last overload is declared here.

server/api/admin-routes.ts:303:29 - error TS2349: This expression is not callable.
  Each member of the union type '{ <ResultDoc = Document<unknown, {}, IUser, {}> & IUser & Required<{ _id: string; }> & { __v: number; }>(id: any, projection: ProjectionType<IUser>, options: QueryOptions<...> & { ...; }): Query<...>; <ResultDoc = Document<...> & ... 2 more ... & { ...; }>(id: any, projection?: ProjectionType<...>, options?: QueryOp...' has signatures, but none of those signatures are compatible with each other.

303     const user = await User.findById(userId);
                                ~~~~~~~~

server/api/chatbot-routes.ts:89:25 - error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: Request, res: Response) => Promise<Response<any, Record<string, any>>>' is not assignable to parameter of type 'Application<Record<string, any>>'.
      Type '(req: Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>, res: Response<any, Record<string, any>>) => Promise<...>' is missing the following properties from type 'Application<Record<string, any>>': init, defaultConfiguration, engine, set, and 63 more.

89 router.post('/message', async (req: Request, res: Response) => {
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  node_modules/@types/express-serve-static-core/index.d.ts:168:5
    168     (path: PathParams, subApplication: Application): T;
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    The last overload is declared here.

server/api/futures-trading-routes.ts:27:26 - error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: Request, res: Response, next: NextFunction) => Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: Request, res: Response, next: NextFunction) => Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Type 'Response<any, Record<string, any>>' is not assignable to type 'void | Promise<void>'.

27 router.get("/positions", requireAuth, async (req: Request, res: Response) => {
                            ~~~~~~~~~~~

  node_modules/@types/express-serve-static-core/index.d.ts:157:5
    157     <
            ~
    158         P = ParamsDictionary,
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ...
    166         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    167     ): T;
        ~~~~~~~~~
    The last overload is declared here.

server/api/futures-trading-routes.ts:30:11 - error TS2304: Cannot find name 'futuresPositions'.

30       id: futuresPositions.id,
             ~~~~~~~~~~~~~~~~

server/api/futures-trading-routes.ts:31:13 - error TS2304: Cannot find name 'futuresPositions'.

31       side: futuresPositions.side,
               ~~~~~~~~~~~~~~~~

server/api/futures-trading-routes.ts:32:13 - error TS2304: Cannot find name 'futuresPositions'.

32       size: futuresPositions.size,
               ~~~~~~~~~~~~~~~~

server/api/futures-trading-routes.ts:33:19 - error TS2304: Cannot find name 'futuresPositions'.

33       entryPrice: futuresPositions.entryPrice,
                     ~~~~~~~~~~~~~~~~

server/api/futures-trading-routes.ts:34:18 - error TS2304: Cannot find name 'futuresPositions'.

34       markPrice: futuresPositions.markPrice,
                    ~~~~~~~~~~~~~~~~

server/api/futures-trading-routes.ts:35:17 - error TS2304: Cannot find name 'futuresPositions'.

35       leverage: futuresPositions.leverage,
                   ~~~~~~~~~~~~~~~~

server/api/futures-trading-routes.ts:36:15 - error TS2304: Cannot find name 'futuresPositions'.

36       margin: futuresPositions.margin,
                 ~~~~~~~~~~~~~~~~

server/api/futures-trading-routes.ts:37:12 - error TS2304: Cannot find name 'futuresPositions'.

37       pnl: futuresPositions.pnl,
              ~~~~~~~~~~~~~~~~

server/api/futures-trading-routes.ts:38:22 - error TS2304: Cannot find name 'futuresPositions'.

38       unrealizedPnl: futuresPositions.unrealizedPnl,
                        ~~~~~~~~~~~~~~~~

server/api/futures-trading-routes.ts:39:15 - error TS2304: Cannot find name 'futuresPositions'.

39       status: futuresPositions.status,
                 ~~~~~~~~~~~~~~~~

server/api/futures-trading-routes.ts:40:17 - error TS2304: Cannot find name 'futuresPositions'.

40       stopLoss: futuresPositions.stopLoss,
                   ~~~~~~~~~~~~~~~~

server/api/futures-trading-routes.ts:41:19 - error TS2304: Cannot find name 'futuresPositions'.

41       takeProfit: futuresPositions.takeProfit,
                     ~~~~~~~~~~~~~~~~

server/api/futures-trading-routes.ts:42:18 - error TS2304: Cannot find name 'futuresPositions'.

42       createdAt: futuresPositions.createdAt,
                    ~~~~~~~~~~~~~~~~

server/api/futures-trading-routes.ts:43:15 - error TS2304: Cannot find name 'futuresContracts'.

43       symbol: futuresContracts.symbol,
                 ~~~~~~~~~~~~~~~~

server/api/futures-trading-routes.ts:44:18 - error TS2304: Cannot find name 'futuresContracts'.

44       baseAsset: futuresContracts.baseAsset,
                    ~~~~~~~~~~~~~~~~

server/api/futures-trading-routes.ts:45:19 - error TS2304: Cannot find name 'futuresContracts'.

45       quoteAsset: futuresContracts.quoteAsset
                     ~~~~~~~~~~~~~~~~

server/api/futures-trading-routes.ts:47:11 - error TS2304: Cannot find name 'futuresPositions'.

47     .from(futuresPositions)
             ~~~~~~~~~~~~~~~~

server/api/futures-trading-routes.ts:48:15 - error TS2304: Cannot find name 'futuresContracts'.

48     .leftJoin(futuresContracts, eq(futuresPositions.contractId, futuresContracts.id))
                 ~~~~~~~~~~~~~~~~

server/api/futures-trading-routes.ts:48:36 - error TS2304: Cannot find name 'futuresPositions'.

48     .leftJoin(futuresContracts, eq(futuresPositions.contractId, futuresContracts.id))
                                      ~~~~~~~~~~~~~~~~

server/api/futures-trading-routes.ts:48:65 - error TS2304: Cannot find name 'futuresContracts'.

48     .leftJoin(futuresContracts, eq(futuresPositions.contractId, futuresContracts.id))
                                                                   ~~~~~~~~~~~~~~~~

server/api/futures-trading-routes.ts:50:10 - error TS2304: Cannot find name 'futuresPositions'.

50       eq(futuresPositions.userId, req.session.userId!),
            ~~~~~~~~~~~~~~~~

server/api/futures-trading-routes.ts:51:10 - error TS2304: Cannot find name 'futuresPositions'.

51       eq(futuresPositions.status, 'open')
            ~~~~~~~~~~~~~~~~

server/api/futures-trading-routes.ts:53:19 - error TS2304: Cannot find name 'futuresPositions'.

53     .orderBy(desc(futuresPositions.createdAt));
                     ~~~~~~~~~~~~~~~~

server/api/futures-trading-routes.ts:69:23 - error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: Request, res: Response, next: NextFunction) => Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: Request, res: Response, next: NextFunction) => Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Type 'Response<any, Record<string, any>>' is not assignable to type 'void | Promise<void>'.

69 router.get("/orders", requireAuth, async (req: Request, res: Response) => {
                         ~~~~~~~~~~~

  node_modules/@types/express-serve-static-core/index.d.ts:157:5
    157     <
            ~
    158         P = ParamsDictionary,
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ...
    166         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    167     ): T;
        ~~~~~~~~~
    The last overload is declared here.

server/api/futures-trading-routes.ts:74:27 - error TS2339: Property 'type' does not exist on type 'PgTableWithColumns<{ name: "futures_orders"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "futures_orders"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; ... 8 more ...; generated: undefined; }, {}, {}>; ... 11 more ...; updatedAt: PgColumn<...>; }; d...'.

74       type: futuresOrders.type,
                             ~~~~

server/api/futures-trading-routes.ts:75:31 - error TS2339: Property 'quantity' does not exist on type 'PgTableWithColumns<{ name: "futures_orders"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "futures_orders"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; ... 8 more ...; generated: undefined; }, {}, {}>; ... 11 more ...; updatedAt: PgColumn<...>; }; d...'.

75       quantity: futuresOrders.quantity,
                                 ~~~~~~~~

server/api/futures-trading-routes.ts:76:28 - error TS2339: Property 'price' does not exist on type 'PgTableWithColumns<{ name: "futures_orders"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "futures_orders"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; ... 8 more ...; generated: undefined; }, {}, {}>; ... 11 more ...; updatedAt: PgColumn<...>; }; d...'.

76       price: futuresOrders.price,
                              ~~~~~

server/api/futures-trading-routes.ts:77:32 - error TS2339: Property 'stopPrice' does not exist on type 'PgTableWithColumns<{ name: "futures_orders"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "futures_orders"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; ... 8 more ...; generated: undefined; }, {}, {}>; ... 11 more ...; updatedAt: PgColumn<...>; }; d...'.

77       stopPrice: futuresOrders.stopPrice,
                                  ~~~~~~~~~

server/api/futures-trading-routes.ts:78:34 - error TS2339: Property 'executedQty' does not exist on type 'PgTableWithColumns<{ name: "futures_orders"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "futures_orders"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; ... 8 more ...; generated: undefined; }, {}, {}>; ... 11 more ...; updatedAt: PgColumn<...>; }; d...'.

78       executedQty: futuresOrders.executedQty,
                                    ~~~~~~~~~~~

server/api/futures-trading-routes.ts:81:34 - error TS2339: Property 'timeInForce' does not exist on type 'PgTableWithColumns<{ name: "futures_orders"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "futures_orders"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; ... 8 more ...; generated: undefined; }, {}, {}>; ... 11 more ...; updatedAt: PgColumn<...>; }; d...'.

81       timeInForce: futuresOrders.timeInForce,
                                    ~~~~~~~~~~~

server/api/futures-trading-routes.ts:82:33 - error TS2339: Property 'reduceOnly' does not exist on type 'PgTableWithColumns<{ name: "futures_orders"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "futures_orders"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; ... 8 more ...; generated: undefined; }, {}, {}>; ... 11 more ...; updatedAt: PgColumn<...>; }; d...'.

82       reduceOnly: futuresOrders.reduceOnly,
                                   ~~~~~~~~~~

server/api/futures-trading-routes.ts:84:15 - error TS2304: Cannot find name 'futuresContracts'.

84       symbol: futuresContracts.symbol,
                 ~~~~~~~~~~~~~~~~

server/api/futures-trading-routes.ts:85:18 - error TS2304: Cannot find name 'futuresContracts'.

85       baseAsset: futuresContracts.baseAsset,
                    ~~~~~~~~~~~~~~~~

server/api/futures-trading-routes.ts:86:19 - error TS2304: Cannot find name 'futuresContracts'.

86       quoteAsset: futuresContracts.quoteAsset
                     ~~~~~~~~~~~~~~~~

server/api/futures-trading-routes.ts:89:15 - error TS2304: Cannot find name 'futuresContracts'.

89     .leftJoin(futuresContracts, eq(futuresOrders.contractId, futuresContracts.id))
                 ~~~~~~~~~~~~~~~~

server/api/futures-trading-routes.ts:89:50 - error TS2339: Property 'contractId' does not exist on type 'PgTableWithColumns<{ name: "futures_orders"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "futures_orders"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; ... 8 more ...; generated: undefined; }, {}, {}>; ... 11 more ...; updatedAt: PgColumn<...>; }; d...'.

89     .leftJoin(futuresContracts, eq(futuresOrders.contractId, futuresContracts.id))
                                                    ~~~~~~~~~~

server/api/futures-trading-routes.ts:89:62 - error TS2304: Cannot find name 'futuresContracts'.

89     .leftJoin(futuresContracts, eq(futuresOrders.contractId, futuresContracts.id))
                                                                ~~~~~~~~~~~~~~~~

server/api/futures-trading-routes.ts:90:12 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: PgColumn<{ name: "user_id"; tableName: "futures_orders"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: false; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>, right: number | SQLWrapper): SQL<...>', gave the following error.
    Argument of type 'string' is not assignable to parameter of type 'number | SQLWrapper'.
  Overload 2 of 3, '(left: Aliased<string>, right: string | SQLWrapper): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "user_id"; tableName: "futures_orders"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: false; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<string>'.
      Type 'PgColumn<{ name: "user_id"; tableName: "futures_orders"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: false; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<string>': sql, fieldAlias
  Overload 3 of 3, '(left: never, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "user_id"; tableName: "futures_orders"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: false; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'never'.

90     .where(eq(futuresOrders.userId, req.session.userId!))
              ~~


server/api/futures-trading-routes.ts:107:23 - error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: Request, res: Response, next: NextFunction) => Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: Request, res: Response, next: NextFunction) => Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Type 'Response<any, Record<string, any>>' is not assignable to type 'void | Promise<void>'.

107 router.post("/order", requireAuth, async (req: Request, res: Response) => {
                          ~~~~~~~~~~~

  node_modules/@types/express-serve-static-core/index.d.ts:157:5
    157     <
            ~
    158         P = ParamsDictionary,
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ...
    166         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    167     ): T;
        ~~~~~~~~~
    The last overload is declared here.

server/api/futures-trading-routes.ts:134:13 - error TS2304: Cannot find name 'futuresContracts'.

134       .from(futuresContracts)
                ~~~~~~~~~~~~~~~~

server/api/futures-trading-routes.ts:136:12 - error TS2304: Cannot find name 'futuresContracts'.

136         eq(futuresContracts.symbol, orderData.symbol),
               ~~~~~~~~~~~~~~~~

server/api/futures-trading-routes.ts:137:12 - error TS2304: Cannot find name 'futuresContracts'.

137         eq(futuresContracts.isActive, true)
               ~~~~~~~~~~~~~~~~

server/api/futures-trading-routes.ts:155:9 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: PgColumn<{ name: "user_id"; tableName: "user_balances"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: false; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>, right: number | SQLWrapper): SQL<...>', gave the following error.
    Argument of type 'string' is not assignable to parameter of type 'number | SQLWrapper'.
  Overload 2 of 3, '(left: Aliased<string>, right: string | SQLWrapper): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "user_id"; tableName: "user_balances"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: false; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<string>'.
      Type 'PgColumn<{ name: "user_id"; tableName: "user_balances"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: false; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<string>': sql, fieldAlias
  Overload 3 of 3, '(left: never, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "user_id"; tableName: "user_balances"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: false; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'never'.

155         eq(userBalances.userId, req.session.userId!),
            ~~


server/api/futures-trading-routes.ts:172:45 - error TS2304: Cannot find name 'futuresPositions'.

172       const [newPosition] = await db.insert(futuresPositions).values({
                                                ~~~~~~~~~~~~~~~~

server/api/futures-trading-routes.ts:198:9 - error TS2769: No overload matches this call.
  Overload 1 of 2, '(value: { userId: number | SQL<unknown> | Placeholder<string, any>; type: string | SQL<unknown> | Placeholder<string, any>; currencyId: number | SQL<unknown> | Placeholder<...>; ... 8 more ...; toAddress?: string | ... 1 more ... | Placeholder<...>; }): PgInsertBase<...>', gave the following error.
    Type 'string' is not assignable to type 'number | SQL<unknown> | Placeholder<string, any>'.
  Overload 2 of 2, '(values: { userId: number | SQL<unknown> | Placeholder<string, any>; type: string | SQL<unknown> | Placeholder<string, any>; currencyId: number | SQL<unknown> | Placeholder<...>; ... 8 more ...; toAddress?: string | ... 1 more ... | Placeholder<...>; }[]): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'userId' does not exist in type '{ userId: number | SQL<unknown> | Placeholder<string, any>; type: string | SQL<unknown> | Placeholder<string, any>; currencyId: number | SQL<unknown> | Placeholder<...>; ... 8 more ...; toAddress?: string | ... 1 more ... | Placeholder<...>; }[]'.

198         userId: req.session.userId!,
            ~~~~~~

  node_modules/drizzle-orm/pg-core/query-builders/insert.d.ts:29:101
     29 export type PgInsertValue<TTable extends PgTable<TableConfig>, OverrideT extends boolean = false> = {
                                                                                                            ~
     30     [Key in keyof InferInsertModel<TTable, {
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ...
     36     }>[Key] | SQL | Placeholder;
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     37 } & {};
        ~
    The expected type comes from property 'userId' which is declared here on type '{ userId: number | SQL<unknown> | Placeholder<string, any>; type: string | SQL<unknown> | Placeholder<string, any>; currencyId: number | SQL<unknown> | Placeholder<...>; ... 8 more ...; toAddress?: string | ... 1 more ... | Placeholder<...>; }'

server/api/futures-trading-routes.ts:224:9 - error TS2769: No overload matches this call.
  Overload 1 of 2, '(value: { symbol: string | SQL<unknown> | Placeholder<string, any>; userId: number | SQL<unknown> | Placeholder<string, any>; side: string | SQL<unknown> | Placeholder<...>; ... 9 more ...; leverage?: number | ... 1 more ... | Placeholder<...>; }): PgInsertBase<...>', gave the following error.
    Type 'string' is not assignable to type 'number | SQL<unknown> | Placeholder<string, any>'.
  Overload 2 of 2, '(values: { symbol: string | SQL<unknown> | Placeholder<string, any>; userId: number | SQL<unknown> | Placeholder<string, any>; side: string | SQL<unknown> | Placeholder<...>; ... 9 more ...; leverage?: number | ... 1 more ... | Placeholder<...>; }[]): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'userId' does not exist in type '{ symbol: string | SQL<unknown> | Placeholder<string, any>; userId: number | SQL<unknown> | Placeholder<string, any>; side: string | SQL<unknown> | Placeholder<string, any>; ... 9 more ...; leverage?: number | ... 1 more ... | Placeholder<...>; }[]'.

224         userId: req.session.userId!,
            ~~~~~~

  node_modules/drizzle-orm/pg-core/query-builders/insert.d.ts:29:101
     29 export type PgInsertValue<TTable extends PgTable<TableConfig>, OverrideT extends boolean = false> = {
                                                                                                            ~
     30     [Key in keyof InferInsertModel<TTable, {
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ...
     36     }>[Key] | SQL | Placeholder;
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     37 } & {};
        ~
    The expected type comes from property 'userId' which is declared here on type '{ symbol: string | SQL<unknown> | Placeholder<string, any>; userId: number | SQL<unknown> | Placeholder<string, any>; side: string | SQL<unknown> | Placeholder<string, any>; ... 9 more ...; leverage?: number | ... 1 more ... | Placeholder<...>; }'

server/api/futures-trading-routes.ts:257:32 - error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: Request, res: Response, next: NextFunction) => Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: Request, res: Response, next: NextFunction) => Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Type 'Response<any, Record<string, any>>' is not assignable to type 'void | Promise<void>'.

257 router.post("/close-position", requireAuth, async (req: Request, res: Response) => {
                                   ~~~~~~~~~~~

  node_modules/@types/express-serve-static-core/index.d.ts:157:5
    157     <
            ~
    158         P = ParamsDictionary,
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ...
    166         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    167     ): T;
        ~~~~~~~~~
    The last overload is declared here.

server/api/futures-trading-routes.ts:278:13 - error TS2304: Cannot find name 'futuresPositions'.

278       .from(futuresPositions)
                ~~~~~~~~~~~~~~~~

server/api/futures-trading-routes.ts:280:12 - error TS2304: Cannot find name 'futuresPositions'.

280         eq(futuresPositions.id, positionId),
               ~~~~~~~~~~~~~~~~

server/api/futures-trading-routes.ts:281:12 - error TS2304: Cannot find name 'futuresPositions'.

281         eq(futuresPositions.userId, req.session.userId!),
               ~~~~~~~~~~~~~~~~

server/api/futures-trading-routes.ts:282:12 - error TS2304: Cannot find name 'futuresPositions'.

282         eq(futuresPositions.status, 'open')
               ~~~~~~~~~~~~~~~~

server/api/futures-trading-routes.ts:298:21 - error TS2304: Cannot find name 'futuresPositions'.

298     await db.update(futuresPositions)
                        ~~~~~~~~~~~~~~~~

server/api/futures-trading-routes.ts:304:17 - error TS2304: Cannot find name 'futuresPositions'.

304       .where(eq(futuresPositions.id, positionId));
                    ~~~~~~~~~~~~~~~~

server/api/futures-trading-routes.ts:314:9 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: PgColumn<{ name: "user_id"; tableName: "user_balances"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: false; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>, right: number | SQLWrapper): SQL<...>', gave the following error.
    Argument of type 'string' is not assignable to parameter of type 'number | SQLWrapper'.
  Overload 2 of 3, '(left: Aliased<string>, right: string | SQLWrapper): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "user_id"; tableName: "user_balances"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: false; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<string>'.
      Type 'PgColumn<{ name: "user_id"; tableName: "user_balances"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: false; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<string>': sql, fieldAlias
  Overload 3 of 3, '(left: never, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "user_id"; tableName: "user_balances"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: false; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'never'.

314         eq(userBalances.userId, req.session.userId!),
            ~~


server/api/futures-trading-routes.ts:343:34 - error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: Request, res: Response, next: NextFunction) => Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: Request, res: Response, next: NextFunction) => Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Type 'Response<any, Record<string, any>>' is not assignable to type 'void | Promise<void>'.

343 router.delete("/order/:orderId", requireAuth, async (req: Request, res: Response) => {
                                     ~~~~~~~~~~~

  node_modules/@types/express-serve-static-core/index.d.ts:157:5
    157     <
            ~
    158         P = ParamsDictionary,
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ...
    166         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    167     ): T;
        ~~~~~~~~~
    The last overload is declared here.

server/api/futures-trading-routes.ts:351:9 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: PgColumn<{ name: "user_id"; tableName: "futures_orders"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: false; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>, right: number | SQLWrapper): SQL<...>', gave the following error.
    Argument of type 'string' is not assignable to parameter of type 'number | SQLWrapper'.
  Overload 2 of 3, '(left: Aliased<string>, right: string | SQLWrapper): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "user_id"; tableName: "futures_orders"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: false; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<string>'.
      Type 'PgColumn<{ name: "user_id"; tableName: "futures_orders"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: false; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<string>': sql, fieldAlias
  Overload 3 of 3, '(left: never, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "user_id"; tableName: "futures_orders"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: false; isPrimaryKey: false; ... 5 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'never'.

351         eq(futuresOrders.userId, req.session.userId!),
            ~~


server/api/futures-trading-routes.ts:387:24 - error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: Request, res: Response, next: NextFunction) => Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: Request, res: Response, next: NextFunction) => Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Type 'Response<any, Record<string, any>>' is not assignable to type 'void | Promise<void>'.

387 router.get("/history", requireAuth, async (req: Request, res: Response) => {
                           ~~~~~~~~~~~

  node_modules/@types/express-serve-static-core/index.d.ts:157:5
    157     <
            ~
    158         P = ParamsDictionary,
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ...
    166         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    167     ): T;
        ~~~~~~~~~
    The last overload is declared here.

server/api/futures-trading-routes.ts:390:11 - error TS2304: Cannot find name 'futuresPositions'.

390       id: futuresPositions.id,
              ~~~~~~~~~~~~~~~~

server/api/futures-trading-routes.ts:391:13 - error TS2304: Cannot find name 'futuresPositions'.

391       side: futuresPositions.side,
                ~~~~~~~~~~~~~~~~

server/api/futures-trading-routes.ts:392:13 - error TS2304: Cannot find name 'futuresPositions'.

392       size: futuresPositions.size,
                ~~~~~~~~~~~~~~~~

server/api/futures-trading-routes.ts:393:19 - error TS2304: Cannot find name 'futuresPositions'.

393       entryPrice: futuresPositions.entryPrice,
                      ~~~~~~~~~~~~~~~~

server/api/futures-trading-routes.ts:394:17 - error TS2304: Cannot find name 'futuresPositions'.

394       leverage: futuresPositions.leverage,
                    ~~~~~~~~~~~~~~~~

server/api/futures-trading-routes.ts:395:12 - error TS2304: Cannot find name 'futuresPositions'.

395       pnl: futuresPositions.pnl,
               ~~~~~~~~~~~~~~~~

server/api/futures-trading-routes.ts:396:15 - error TS2304: Cannot find name 'futuresPositions'.

396       status: futuresPositions.status,
                  ~~~~~~~~~~~~~~~~

server/api/futures-trading-routes.ts:397:18 - error TS2304: Cannot find name 'futuresPositions'.

397       createdAt: futuresPositions.createdAt,
                     ~~~~~~~~~~~~~~~~

server/api/futures-trading-routes.ts:398:15 - error TS2304: Cannot find name 'futuresContracts'.

398       symbol: futuresContracts.symbol
                  ~~~~~~~~~~~~~~~~

server/api/futures-trading-routes.ts:400:11 - error TS2304: Cannot find name 'futuresPositions'.

400     .from(futuresPositions)
              ~~~~~~~~~~~~~~~~

server/api/futures-trading-routes.ts:401:15 - error TS2304: Cannot find name 'futuresContracts'.

401     .leftJoin(futuresContracts, eq(futuresPositions.contractId, futuresContracts.id))
                  ~~~~~~~~~~~~~~~~

server/api/futures-trading-routes.ts:401:36 - error TS2304: Cannot find name 'futuresPositions'.

401     .leftJoin(futuresContracts, eq(futuresPositions.contractId, futuresContracts.id))
                                       ~~~~~~~~~~~~~~~~

server/api/futures-trading-routes.ts:401:65 - error TS2304: Cannot find name 'futuresContracts'.

401     .leftJoin(futuresContracts, eq(futuresPositions.contractId, futuresContracts.id))
                                                                    ~~~~~~~~~~~~~~~~

server/api/futures-trading-routes.ts:402:15 - error TS2304: Cannot find name 'futuresPositions'.

402     .where(eq(futuresPositions.userId, req.session.userId!))
                  ~~~~~~~~~~~~~~~~

server/api/futures-trading-routes.ts:403:19 - error TS2304: Cannot find name 'futuresPositions'.

403     .orderBy(desc(futuresPositions.createdAt))
                      ~~~~~~~~~~~~~~~~

server/api/market-data-routes.ts:232:46 - error TS2304: Cannot find name 'futuresContracts'.

232     const contracts = await db.select().from(futuresContracts)
                                                 ~~~~~~~~~~~~~~~~

server/api/market-data-routes.ts:233:17 - error TS2304: Cannot find name 'futuresContracts'.

233       .where(eq(futuresContracts.isActive, true));
                    ~~~~~~~~~~~~~~~~

server/api/referral-routes.ts:25:22 - error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: Request, res: Response, next: NextFunction) => Response<any, Record<string, any>>' is not assignable to parameter of type 'RequestHandlerParams<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
      Type '(req: Request, res: Response, next: NextFunction) => Response<any, Record<string, any>>' is not assignable to type 'RequestHandler<ParamsDictionary, any, any, ParsedQs, Record<string, any>>'.
        Type 'Response<any, Record<string, any>>' is not assignable to type 'void | Promise<void>'.

25 router.get("/stats", requireAuth, async (req: Request, res: Response) => {
                        ~~~~~~~~~~~

  node_modules/@types/express-serve-static-core/index.d.ts:157:5
    157     <
            ~
    158         P = ParamsDictionary,
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ...
    166         ...handlers: Array<RequestHandlerParams<P, ResBody, ReqBody, ReqQuery, LocalsObj>>
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    167     ): T;
        ~~~~~~~~~
    The last overload is declared here.

server/api/referral-routes.ts:30:54 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>, right: number | SQLWrapper): SQL<...>', gave the following error.
    Argument of type 'string' is not assignable to parameter of type 'number | SQLWrapper'.
  Overload 2 of 3, '(left: Aliased<string>, right: string | SQLWrapper): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<string>'.
      Type 'PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<string>': sql, fieldAlias
  Overload 3 of 3, '(left: never, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'never'.

30     const user = await db.select().from(users).where(eq(users.id, userId)).limit(1);
                                                        ~~


server/api/referral-routes.ts:38:58 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(left: PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>, right: number | SQLWrapper): SQL<...>', gave the following error.
    Argument of type 'string' is not assignable to parameter of type 'number | SQLWrapper'.
  Overload 2 of 3, '(left: Aliased<string>, right: string | SQLWrapper): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'Aliased<string>'.
      Type 'PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is missing the following properties from type 'Aliased<string>': sql, fieldAlias
  Overload 3 of 3, '(left: never, right: unknown): SQL<unknown>', gave the following error.
    Argument of type 'PgColumn<{ name: "id"; tableName: "users"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; hasDefault: true; isPrimaryKey: true; isAutoincrement: false; ... 4 more ...; generated: undefined; }, {}, {}>' is not assignable to parameter of type 'never'.

38       await db.update(users).set({ referralCode }).where(eq(users.id, userId));
                                                            ~~


server/api/referral-routes.ts:44:43 - error TS2304: Cannot find name 'referralEarnings'.

44         total: sql<number>`COALESCE(SUM(${referralEarnings.amount}), 0)`
                                             ~~~~~~~~~~~~~~~~

server/api/referral-routes.ts:46:13 - error TS2304: Cannot find name 'referralEarnings'.

46       .from(referralEarnings)
               ~~~~~~~~~~~~~~~~

server/api/referral-routes.ts:47:17 - error TS2304: Cannot find name 'referralEarnings'.

47       .where(eq(referralEarnings.referrerId, userId));
                   ~~~~~~~~~~~~~~~~

server/api/referral-routes.ts:52:45 - error TS2304: Cannot find name 'referralEarnings'.

52         count: sql<number>`COUNT(DISTINCT ${referralEarnings.referredUserId})`
                                               ~~~~~~~~~~~~~~~~

server/api/referral-routes.ts:54:13 - error TS2304: Cannot find name 'referralEarnings'.

54       .from(referralEarnings)
               ~~~~~~~~~~~~~~~~

server/api/referral-routes.ts:55:17 - error TS2304: Cannot find name 'referralEarnings'.

55       .where(eq(referralEarnings.referrerId, userId));
                   ~~~~~~~~~~~~~~~~

server/api/referral-routes.ts:63:45 - error TS2304: Cannot find name 'referralEarnings'.

63         monthly: sql<number>`COALESCE(SUM(${referralEarnings.amount}), 0)`
                                               ~~~~~~~~~~~~~~~~

server/api/referral-routes.ts:65:13 - error TS2304: Cannot find name 'referralEarnings'.

65       .from(referralEarnings)
               ~~~~~~~~~~~~~~~~

server/api/referral-routes.ts:68:14 - error TS2304: Cannot find name 'referralEarnings'.

68           eq(referralEarnings.referrerId, userId),
                ~~~~~~~~~~~~~~~~

server/api/referral-routes.ts:69:17 - error TS2304: Cannot find name 'referralEarnings'.

69           sql`${referralEarnings.createdAt} >= ${startOfMonth}`
                   ~~~~~~~~~~~~~~~~

server/api/referral-routes.ts:76:13 - error TS2304: Cannot find name 'referralEarnings'.

76         id: referralEarnings.id,
               ~~~~~~~~~~~~~~~~

server/api/referral-routes.ts:77:17 - error TS2304: Cannot find name 'referralEarnings'.

77         amount: referralEarnings.amount,
                   ~~~~~~~~~~~~~~~~

server/api/referral-routes.ts:78:21 - error TS2304: Cannot find name 'referralEarnings'.

78         percentage: referralEarnings.percentage,
                       ~~~~~~~~~~~~~~~~

server/api/referral-routes.ts:79:26 - error TS2304: Cannot find name 'referralEarnings'.

79         transactionType: referralEarnings.transactionType,
                            ~~~~~~~~~~~~~~~~

server/api/referral-routes.ts:80:20 - error TS2304: Cannot find name 'referralEarnings'.

80         createdAt: referralEarnings.createdAt,
                      ~~~~~~~~~~~~~~~~

server/api/referral-routes.ts:83:13 - error TS2304: Cannot find name 'referralEarnings'.

83       .from(referralEarnings)
               ~~~~~~~~~~~~~~~~

server/api/referral-routes.ts:84:38 - error TS2304: Cannot find name 'referralEarnings'.

84       .innerJoin(users, eq(users.id, referralEarnings.referredUserId))
                                        ~~~~~~~~~~~~~~~~

server/api/refer
Your TypeScript build is failing due to many type errors in your codebase. These issues are not related to Render’s platform. To start your app locally, you’ll need to resolve these TypeScript errors first—your app cannot compile or run until these are fixed.

Typical steps:

Address missing modules and incorrect types as shown in your error logs.
Fix all TypeScript errors so tsc or npm run check completes successfully.
Then, run npm start to launch your app locally.
For more on troubleshooting, see the Render troubleshooting guide1.

it still says- 
Found 499 errors in 46 files.

Errors  Files
     1  client/src/components/animated-error-banner.tsx:126
     4  client/src/components/crypto-pair-selector.tsx:130
     3  client/src/components/lightweight-chart.tsx:87
     2  client/src/components/protected-route.tsx:43
     8  client/src/components/pull-to-refresh.tsx:13
     9  client/src/components/splash-screen.tsx:5
     1  client/src/lib/chart-state-manager.ts:155
     1  client/src/pages/account/login.tsx:263
     1  client/src/pages/account/register.tsx:437
     7  client/src/pages/company/careers.tsx:7
     1  client/src/pages/mobile/assets.tsx:34
     1  client/src/pages/mobile/deposit-details.tsx:42
     9  client/src/pages/mobile/home.tsx:353
     1  client/src/pages/mobile/kyc-status.tsx:37
     1  client/src/pages/mobile/news.tsx:244
     5  client/src/pages/mobile/security.tsx:69
     8  client/src/pages/mobile/settings.tsx:53
     1  client/src/pages/mobile/trade.tsx:212
     1  client/src/pages/mobile/transfer-details.tsx:11
     1  client/src/pages/mobile/verification-submitted.tsx:36
     1  client/src/pages/mobile/verification/VerificationStart.tsx:7
     2  client/src/pages/mobile/withdrawal-details.tsx:42
     2  client/src/pages/platform/staking.tsx:162
     1  client/src/pages/platform/trading.tsx:51
     1  client/src/pages/platform/wallet.tsx:161
     5  server/api/admin-kyc-routes.ts:17
    14  server/api/admin-panel-routes.ts:18
    18  server/api/admin-routes.ts:20
     1  server/api/chatbot-routes.ts:89
    73  server/api/futures-trading-routes.ts:27
     2  server/api/market-data-routes.ts:232
    26  server/api/referral-routes.ts:25
    24  server/api/spot-trading-routes.ts:6
    11  server/api/staking-routes.ts:5
     9  server/api/trading-routes.mongo.ts:4
     4  server/api/verification-routes.ts:32
     6  server/api/wallet-routes.ts:7
     6  server/mongodb.ts:62
    42  server/mongoStorage.ts:92
   116  server/routes.mongo.ts:60
    17  server/services/deposit.service.ts:7
    15  server/services/staking.service.ts:12
     9  server/services/trading.service.mongo.ts:5
    11  server/services/wallet.service.ts:44
     1  server/vite.ts:43
    16  shared/schema.ts:259

C:\Users\MANA\Documents\Dell\nedaxer-com>

